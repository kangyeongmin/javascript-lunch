(()=>{"use strict";var n={402:(n,t,e)=>{e.d(t,{Z:()=>s});var r=e(537),o=e.n(r),a=e(645),i=e.n(a)()(o());i.push([n.id,'* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nul,\nli {\n  list-style: none;\n}\n\nhtml,\nbody {\n  font-family: sans-serif;\n  font-size: 16px;\n}\n\n/* Colors *****************************************/\n:root {\n  --primary-color: #ec4a0a;\n  --lighten-color: #f6a88a;\n  --grey-100: #ffffff;\n  --grey-200: #d0d5dd;\n  --grey-300: #667085;\n  --grey-400: #344054;\n  --grey-500: #000000;\n}\n\n/* Typography *************************************/\n.text-title {\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 600;\n}\n\n.text-subtitle {\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 600;\n}\n\n.text-body {\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n}\n\n.text-caption {\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n}\n\n/* GNB ********************************************/\n.gnb {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n\n  padding: 0 16px;\n\n  background-color: var(--primary-color);\n}\n\n.gnb__title {\n  color: #fcfcfd;\n}\n\n.gnb__button {\n  height: 40px;\n\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 24px;\n  cursor: pointer;\n}\n\n.gnb__button img {\n  display: block;\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n}\n\n/* 메뉴 탭바 ********************************************/\n.tab-container {\n  display: flex;\n  justify-content: space-between;\n  padding: 20px 15px 10px 15px;\n}\n\n.tab {\n  width: 100%;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 35px;\n\n  text-align: center;\n\n  color: #667085;\n  border-bottom: 2px solid #d0d5dd;\n}\n\n.radio:checked + label {\n  color: #ec4a0a;\n  border-bottom: 2px solid #ec4a0a;\n}\n\n.radio {\n  appearance: none;\n}\n\n/* 음식점 목록 *****************************************/\n\n/* 카테고리/정렬 필터 */\n.restaurant-filter-container {\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 16px;\n  margin-top: 24px;\n}\n\n.restaurant-filter-container select {\n  height: 44px;\n  min-width: 125px;\n\n  border: 1px solid #d0d5dd;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 16px;\n}\n\n.restaurant-filter {\n  padding: 8px;\n}\n\n/* 음식점 목록 */\n.restaurant-list-container {\n  display: flex;\n  flex-direction: column;\n\n  padding: 0 16px;\n  margin: 16px 0;\n}\n\n.restaurant {\n  display: flex;\n  align-items: flex-start;\n\n  padding: 16px 8px;\n\n  border-bottom: 1px solid #e9eaed;\n}\n\n.restaurant__category {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n  min-width: 64px;\n  min-height: 64px;\n\n  margin-right: 16px;\n\n  border-radius: 50%;\n  background: var(--lighten-color);\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n}\n\n.restaurant__info {\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n\n.restaurant__name {\n  margin: 0;\n}\n\n.restaurant__distance {\n  color: var(--primary-color);\n}\n\n.restaurant__description {\n  display: -webkit-box;\n\n  padding-top: 8px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n/* 음식점 추가 모달 *****************************************/\n.modal {\n  display: none;\n}\n\n.modal--open {\n  display: block;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n\n.modal-container {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  height: auto;\n  max-height: 100%;\n  overflow-y: scroll;\n\n  padding: 32px 16px;\n\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n}\n\n.modal-title {\n  margin-bottom: 36px;\n}\n\n.form-item {\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 36px;\n}\n\n.form-item label {\n  color: var(--grey-400);\n  font-size: 14px;\n}\n\n.form-item--required label::after {\n  padding-left: 4px;\n\n  color: var(--primary-color);\n  content: "*";\n}\n\n.form-item .help-text {\n  color: var(--grey-300);\n}\n\n.form-item input,\n.form-item textarea,\n.form-item select {\n  padding: 8px;\n  margin: 6px 0;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  font-size: 16px;\n}\n\n.form-item textarea {\n  resize: none;\n}\n\n.form-item select {\n  height: 44px;\n\n  padding: 8px;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  color: var(--grey-300);\n}\n\ninput[name="name"],\ninput[name="link"] {\n  height: 44px;\n}\n\n.button-container {\n  display: flex;\n}\n\n.button {\n  width: 100%;\n  height: 44px;\n\n  margin-right: 16px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.button:last-child {\n  margin-right: 0;\n}\n\n.button--secondary {\n  border: 1px solid var(--grey-300);\n  background: transparent;\n\n  color: var(--grey-300);\n}\n\n.button--primary {\n  background: var(--primary-color);\n\n  color: var(--grey-100);\n}\n\n/* 음식점 상세 모달 *****************************************/\n.icon-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.info-container {\n  margin-bottom: 30px;\n}\n\n.restaurant__detail__name {\n  margin: 15px 0 10px 0;\n  font-weight: 600;\n  font-size: 20px;\n}\n\n.restaurant__detail__distance {\n  color: var(--primary-color);\n}\n\n.restaurant__detail__description {\n  margin: 15px 0 10px 0;\n}\n',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"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",sourcesContent:['* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nul,\nli {\n  list-style: none;\n}\n\nhtml,\nbody {\n  font-family: sans-serif;\n  font-size: 16px;\n}\n\n/* Colors *****************************************/\n:root {\n  --primary-color: #ec4a0a;\n  --lighten-color: #f6a88a;\n  --grey-100: #ffffff;\n  --grey-200: #d0d5dd;\n  --grey-300: #667085;\n  --grey-400: #344054;\n  --grey-500: #000000;\n}\n\n/* Typography *************************************/\n.text-title {\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 600;\n}\n\n.text-subtitle {\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 600;\n}\n\n.text-body {\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n}\n\n.text-caption {\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n}\n\n/* GNB ********************************************/\n.gnb {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n\n  padding: 0 16px;\n\n  background-color: var(--primary-color);\n}\n\n.gnb__title {\n  color: #fcfcfd;\n}\n\n.gnb__button {\n  height: 40px;\n\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 24px;\n  cursor: pointer;\n}\n\n.gnb__button img {\n  display: block;\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n}\n\n/* 메뉴 탭바 ********************************************/\n.tab-container {\n  display: flex;\n  justify-content: space-between;\n  padding: 20px 15px 10px 15px;\n}\n\n.tab {\n  width: 100%;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 35px;\n\n  text-align: center;\n\n  color: #667085;\n  border-bottom: 2px solid #d0d5dd;\n}\n\n.radio:checked + label {\n  color: #ec4a0a;\n  border-bottom: 2px solid #ec4a0a;\n}\n\n.radio {\n  appearance: none;\n}\n\n/* 음식점 목록 *****************************************/\n\n/* 카테고리/정렬 필터 */\n.restaurant-filter-container {\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 16px;\n  margin-top: 24px;\n}\n\n.restaurant-filter-container select {\n  height: 44px;\n  min-width: 125px;\n\n  border: 1px solid #d0d5dd;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 16px;\n}\n\n.restaurant-filter {\n  padding: 8px;\n}\n\n/* 음식점 목록 */\n.restaurant-list-container {\n  display: flex;\n  flex-direction: column;\n\n  padding: 0 16px;\n  margin: 16px 0;\n}\n\n.restaurant {\n  display: flex;\n  align-items: flex-start;\n\n  padding: 16px 8px;\n\n  border-bottom: 1px solid #e9eaed;\n}\n\n.restaurant__category {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n  min-width: 64px;\n  min-height: 64px;\n\n  margin-right: 16px;\n\n  border-radius: 50%;\n  background: var(--lighten-color);\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n}\n\n.restaurant__info {\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n\n.restaurant__name {\n  margin: 0;\n}\n\n.restaurant__distance {\n  color: var(--primary-color);\n}\n\n.restaurant__description {\n  display: -webkit-box;\n\n  padding-top: 8px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n/* 음식점 추가 모달 *****************************************/\n.modal {\n  display: none;\n}\n\n.modal--open {\n  display: block;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n\n.modal-container {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  height: auto;\n  max-height: 100%;\n  overflow-y: scroll;\n\n  padding: 32px 16px;\n\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n}\n\n.modal-title {\n  margin-bottom: 36px;\n}\n\n.form-item {\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 36px;\n}\n\n.form-item label {\n  color: var(--grey-400);\n  font-size: 14px;\n}\n\n.form-item--required label::after {\n  padding-left: 4px;\n\n  color: var(--primary-color);\n  content: "*";\n}\n\n.form-item .help-text {\n  color: var(--grey-300);\n}\n\n.form-item input,\n.form-item textarea,\n.form-item select {\n  padding: 8px;\n  margin: 6px 0;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  font-size: 16px;\n}\n\n.form-item textarea {\n  resize: none;\n}\n\n.form-item select {\n  height: 44px;\n\n  padding: 8px;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  color: var(--grey-300);\n}\n\ninput[name="name"],\ninput[name="link"] {\n  height: 44px;\n}\n\n.button-container {\n  display: flex;\n}\n\n.button {\n  width: 100%;\n  height: 44px;\n\n  margin-right: 16px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.button:last-child {\n  margin-right: 0;\n}\n\n.button--secondary {\n  border: 1px solid var(--grey-300);\n  background: transparent;\n\n  color: var(--grey-300);\n}\n\n.button--primary {\n  background: var(--primary-color);\n\n  color: var(--grey-100);\n}\n\n/* 음식점 상세 모달 *****************************************/\n.icon-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.info-container {\n  margin-bottom: 30px;\n}\n\n.restaurant__detail__name {\n  margin: 15px 0 10px 0;\n  font-weight: 600;\n  font-size: 20px;\n}\n\n.restaurant__detail__distance {\n  color: var(--primary-color);\n}\n\n.restaurant__detail__description {\n  margin: 15px 0 10px 0;\n}\n'],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),t.push(c))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],l=r.base?A[0]+r.base:A[0],c=a[l]||0,d="".concat(l," ").concat(c);a[l]=c+1;var p=e(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var g=o(u,r);r.byIndex=s,t.splice(s,0,{identifier:d,updater:g,references:1})}i.push(d)}return i}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=e(a[i]);t[s].references--}for(var A=r(n,o),l=0;l<a.length;l++){var c=e(a[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}a=A}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return n[r](a,a.exports,e),a.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var r=t.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0,(()=>{class n extends HTMLElement{constructor(){super()}render(n){this.innerHTML=`\n      <div id="modalBackdrop" class="modal-backdrop"></div>\n      <div id="modal" class="modal-container">\n        ${n}\n      </div>\n    `,this.onClickBackdrop()}onClickBackdrop(){const n=document.getElementById("modalBackdrop");n?.addEventListener("click",(()=>{this.close()}))}open(n){const t=document.getElementById("bottomSheet");t?.classList.add("modal--open"),this.render(n)}close(){const n=document.getElementById("bottomSheet");n?.classList.remove("modal--open"),this.render("")}}const t=n,r=e.p+"category-asian.png",o=e.p+"category-chinese.png",a=e.p+"category-japanese.png",i=e.p+"category-korean.png",s=e.p+"category-western.png",A=e.p+"category-etc.png",l=e.p+"add-button.png",c=e.p+"favorite-icon-filled.png",d=e.p+"favorite-icon-lined.png",p=()=>{const n=document.getElementById("bottomSheet");n instanceof t&&n.close()},u=n=>{const e=document.getElementById("bottomSheet");e instanceof t&&e.open(n)},g=()=>{const n=document.getElementById("restaurantFilterContainer");n instanceof HTMLElement&&(n.style.display="")},m=n=>({한식:i,중식:o,일식:a,양식:s,아시안:r,기타:A}[n]),E="none",f=/(http[s]?|ftp):\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}/g;class h extends HTMLElement{constructor(){super(),this.controller=v.getInstance(),this.render(),this.onClickTab()}render(){this.innerHTML='\n      <form id="tabContainer" class="tab-container">\n        <input id="all" name="tab" value="all" type="radio" class="radio" checked>\n        <label id="allTab" class="tab tab-selected" for="all">모든 음식점</label>\n        <input id="favorite" name="tab" value="favorite" type="radio" class="radio">\n        <label id="favoriteTab" class="tab" for="favorite">자주 가는 음식점</label>\n      </form>\n    '}onClickTab(){const n=document.getElementById("tabContainer");n instanceof HTMLFormElement&&n.addEventListener("change",(()=>{if("favorite"==h.getCurrentTab())return(()=>{const n=document.getElementById("restaurantFilterContainer");n instanceof HTMLElement&&(n.style.display="none")})(),void this.controller.setFavoriteRestaurantList();g(),this.controller.loadLocalStorage()}))}static getCurrentTab(){const n=document.querySelector('input[name="tab"]:checked');return n instanceof HTMLInputElement?n.value:E}static setCurrentTab(n){const t=document.getElementById(n);t instanceof HTMLInputElement&&(t.checked=!0)}}const x=h;class B extends HTMLElement{constructor(){super(),this.controller=v.getInstance(),this.render()}render(){this.innerHTML=`\n      <section id="restaurantList" class="restaurant-list-container">\n        <ul class="restaurant-list">\n        ${this.controller.getRestaurants().map((n=>(new class{render(n){return`\n      <li class="restaurant">\n        <div class="restaurant__category">\n          <img src="${m(n.category)}" alt="${n.category}" class="category-icon">\n        </div>\n        <div id="restaurantInfo" class="restaurant__info">\n          <h3 class="restaurant__name text-subtitle">${n.name}</h3>\n          <span class="restaurant__distance text-body">캠퍼스부터 ${n.distance}분 내</span>\n          <p class="restaurant__description text-body">${n.description}</p>\n        </div>\n        <img id="favorite" src="${n.isFavorite?c:d}" alt="favorite">\n      </li>\n    `}}).render(n))).join("")}\n        </ul>\n      </section>\n    `,this.onClickRestaurantItem(),this.onToggleFavorite()}onClickRestaurantItem(){this.querySelectorAll("#restaurantInfo").forEach(((n,t)=>{n.addEventListener("click",(()=>{this.controller.setSelectedRestaurantIndex(t),u("<restaurant-detail />")}))}))}onToggleFavorite(){this.querySelectorAll("#favorite").forEach(((n,t)=>{n.addEventListener("click",(()=>{this.controller.setSelectedRestaurantIndex(t),this.controller.toggleFavorite(),"favorite"!==x.getCurrentTab()?this.controller.loadLocalStorage():this.controller.setFavoriteRestaurantList()}))}))}}const b=B,C={state:{restaurants:[]},create(){this.state=new Proxy({restaurants:[]},{set:(n,t,e)=>{"restaurants"===t&&(n[t]=e);const r=document.getElementById("restaurantList");return r instanceof b&&r.render(),!0}})}};class y{constructor(){this.selectedRestaurantIndex=-1,this.state=C.state,this.loadLocalStorage()}static getInstance(){return y.instance||(y.instance=new y),y.instance}getRestaurants(){return this.state.restaurants}getSelectedRestaurantIndex(){return this.selectedRestaurantIndex}getSelectedRestaurant(){return this.state.restaurants[this.selectedRestaurantIndex]}setSelectedRestaurantIndex(n){this.selectedRestaurantIndex=n}setFavoriteRestaurantList(){this.state.restaurants=this.getLocalStorage().filter((n=>{if(n.isFavorite)return n}))}addRestaurant(n){this.setLocalStorage([...this.getLocalStorage(),n])}loadLocalStorage(){this.state.restaurants=this.getLocalStorage()}getLocalStorage(){return JSON.parse(localStorage.getItem("restaurants"))??[]}setLocalStorage(n){localStorage.setItem("restaurants",JSON.stringify(n))}sortRestaurants(n){this.state.restaurants=[...this.state.restaurants].sort(((t,e)=>"name"===n||"distance"===n?t[n]>e[n]?1:-1:0))}filterRestaurants(n){"전체"===n?this.loadLocalStorage():this.state.restaurants=this.getLocalStorage().filter((t=>t.category===n))}toggleFavorite(){const n=this.getLocalStorage();n.forEach(((t,e)=>{JSON.stringify(t)==JSON.stringify(this.getSelectedRestaurant())&&(n[e].isFavorite=!n[e].isFavorite)})),this.setLocalStorage(n),this.getSelectedRestaurant().isFavorite=!this.getSelectedRestaurant().isFavorite}deleteRestaurant(){const n=this.getLocalStorage().filter((n=>JSON.stringify(n)!=JSON.stringify(this.getSelectedRestaurant())));this.setLocalStorage(n)}}const v=y,k=n=>{if(0==n.trim().length)throw new Error("[ERROR] 이름을 입력해주세요.");return n},w=n=>{if(0!=n.trim().length&&!f.test(n))throw new Error("[ERROR] 유효한 링크를 입력해주세요.");return n};class _ extends HTMLElement{constructor(){super(),this.controller=v.getInstance(),this.render(),this.onSelectOption()}render(){this.innerHTML='\n      <select name="sorting" id="sorting-filter" class="restaurant-filter">\n        <option id="sortingOptionName" value="name">이름순</option>\n        <option value="distance">거리순</option>\n      </select>\n    '}onSelectOption(){const n=document.getElementById("sorting-filter");n instanceof HTMLSelectElement&&n.addEventListener("change",(()=>{this.controller.sortRestaurants(n.value)}))}static getOption(){const n=document.getElementById("sorting-filter");return n instanceof HTMLSelectElement?n.value:E}}const S=_;class L extends HTMLElement{constructor(){super(),this.controller=v.getInstance(),this.render(),this.onSelectOption()}render(){this.innerHTML='\n      <select name="category" id="category-filter" class="restaurant-filter">\n        <option value="전체">전체</option>\n        <option value="한식">한식</option>\n        <option value="중식">중식</option>\n        <option value="일식">일식</option>\n        <option value="양식">양식</option>\n        <option value="아시안">아시안</option>\n        <option value="기타">기타</option>\n      </select>\n      '}onSelectOption(){const n=document.getElementById("category-filter");n instanceof HTMLSelectElement&&n.addEventListener("change",(()=>{this.controller.filterRestaurants(n.value),this.controller.sortRestaurants(S.getOption())}))}static getOption(){const n=document.getElementById("category-filter");return n instanceof HTMLSelectElement?n.value:E}}const T=L;class I extends HTMLElement{constructor(){super(),this.controller=v.getInstance(),this.render(),this.onClickCancelButton(),this.onSubmitRestaurantForm()}render(){this.innerHTML='\n      <h2 class="modal-title text-title">새로운 음식점</h2>\n      <form id="restaurantForm">\n\n        \x3c!-- 카테고리 --\x3e\n        <div class="form-item form-item--required">\n          <label for="category text-caption">카테고리</label>\n          <select name="category" id="category" required>\n            <option value="">선택해 주세요</option>\n            <option value="한식">한식</option>\n            <option value="중식">중식</option>\n            <option value="일식">일식</option>\n            <option value="양식">양식</option>\n            <option value="아시안">아시안</option>\n            <option value="기타">기타</option>\n          </select>\n        </div>\n\n        \x3c!-- 음식점 이름 --\x3e\n        <div class="form-item form-item--required">\n          <label for="name text-caption">이름</label>\n          <input type="text" name="name" id="name" required>\n        </div>\n        \x3c!-- 거리 --\x3e\n        <div class="form-item form-item--required">\n          <label for="distance text-caption">거리(도보 이동 시간) </label>\n          <select name="distance" id="distance" required>\n            <option value="">선택해 주세요</option>\n            <option value="5">5분 내</option>\n            <option value="10">10분 내</option>\n            <option value="15">15분 내</option>\n            <option value="20">20분 내</option>\n            <option value="30">30분 내</option>\n          </select>\n        </div>\n        \x3c!-- 설명 --\x3e\n        <div class="form-item">\n          <label for="description text-caption">설명</label>\n          <textarea name="description" id="description" cols="30" rows="5"></textarea>\n          <span class="help-text text-caption">메뉴 등 추가 정보를 입력해 주세요.</span>\n        </div>\n        \x3c!-- 링크 --\x3e\n        <div class="form-item">\n          <label for="link text-caption">참고 링크</label>\n          <input type="text" name="link" id="link">\n          <span class="help-text text-caption">매장 정보를 확인할 수 있는 링크를 입력해 주세요.</span>\n        </div>\n        \x3c!-- 취소/추가 버튼 --\x3e\n        <div class="button-container">\n          <button id="cancelButton" type="button" class="button button--secondary text-caption">취소하기</button>\n          <button id="submitButton" type="submit" class="button button--primary text-caption">추가하기</button>\n        </div>\n      </form>\n    '}onClickCancelButton(){const n=this.querySelector("#cancelButton");n instanceof HTMLElement&&n.addEventListener("click",(()=>{p()}))}onSubmitRestaurantForm(){const n=document.getElementById("restaurantForm");n instanceof HTMLElement&&n.addEventListener("submit",(n=>{n.preventDefault();const t=this.createNewRestaurant(n);this.controller.addRestaurant(t),this.controller.sortRestaurants(S.getOption()),this.controller.filterRestaurants(T.getOption()),"favorite"==x.getCurrentTab()&&(x.setCurrentTab("all"),g()),p()}))}createNewRestaurant(n){try{const t=new FormData(n.target);return{category:t.get("category"),name:k(t.get("name")),distance:Number(t.get("distance")),description:t.get("description"),link:w(t.get("link")),isFavorite:!1}}catch(n){alert(n.message)}}}const R=I;class j extends HTMLElement{constructor(){super(),this.render(),this.onClickAddIcon()}render(){this.innerHTML=`\n      <header class="gnb">\n        <h1 class="gnb__title text-title">점심 뭐 먹지</h1>\n        <button id="addIcon" type="button" class="gnb__button" aria-label="음식점 추가">\n          <img id="addButtonImage" src=${l} alt="음식점 추가">\n        </button>\n      </header>\n      `}onClickAddIcon(){const n=document.getElementById("addIcon");n?.addEventListener("click",(()=>{u("<add-restaurant />")}))}}const M=j;var Y,H,z=function(n,t,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!r:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(n):r?r.value:t.get(n)};class F extends HTMLElement{constructor(){super(),Y.add(this),this.controller=v.getInstance(),this.render(this.controller.getSelectedRestaurant())}render(n){this.innerHTML=`\n      <div id="restaurantDetail">\n        <div class="icon-container">\n          <div class="restaurant__category">\n            <img src="${m(n.category)}" alt="${n.category}" class="category-icon">\n          </div>\n          <img id="favorite" src="${n.isFavorite?c:d}" alt="favorite">\n        </div>\n        <div id="restaurantInfo" class="info-container">\n          <h3 class="restaurant__detail__name text-subtitle">${n.name}</h3>\n          <span class="restaurant__detail__distance text-body">캠퍼스부터 ${n.distance}분 내</span>\n          <p class="restaurant__detail__description text-body">${n.description}</p>\n          <a href="${n.link}" class="restaurant__link text-body">${n.link}</a>\n        </div>\n        <div class="button-container">\n          <button id="deleteButton" type="button" class="button button--secondary text-caption">삭제하기</button>\n          <button id="closeButton" type="submit" class="button button--primary text-caption">닫기</button>\n        </div>\n      </div>\n    `,this.onClickCloseButton(),this.onClickDeleteButton(),this.onToggleFavorite()}onClickCloseButton(){const n=this.querySelector("#closeButton");n instanceof HTMLElement&&n.addEventListener("click",(()=>{z(this,Y,"m",H).call(this),this.controller.loadLocalStorage(),p()}))}onClickDeleteButton(){const n=this.querySelector("#deleteButton");n instanceof HTMLElement&&n.addEventListener("click",(()=>{this.controller.deleteRestaurant(),this.controller.sortRestaurants(S.getOption()),this.controller.filterRestaurants(T.getOption()),z(this,Y,"m",H).call(this),p()}))}onToggleFavorite(){const n=this.querySelector("#favorite");n instanceof HTMLElement&&n.addEventListener("click",(()=>{this.controller.toggleFavorite(),this.render(this.controller.getSelectedRestaurant())}))}}Y=new WeakSet,H=function(){"favorite"===x.getCurrentTab()&&this.controller.setFavoriteRestaurantList()};const D=F;var O=e(379),q=e.n(O),$=e(795),N=e.n($),Z=e(569),W=e.n(Z),J=e(565),P=e.n(J),X=e(216),U=e.n(X),G=e(589),Q=e.n(G),V=e(402),K={};K.styleTagTransform=Q(),K.setAttributes=P(),K.insert=W().bind(null,"head"),K.domAPI=N(),K.insertStyleElement=U(),q()(V.Z,K),V.Z&&V.Z.locals&&V.Z.locals,C.create(),customElements.define("nav-bar",M),customElements.define("bottom-sheet",t),customElements.define("category-select-box",T),customElements.define("sorting-select-box",S),customElements.define("add-restaurant",R),customElements.define("restaurant-list",b),customElements.define("tab-bar",x),customElements.define("restaurant-detail",D)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUtoSCxNQUM5RzJJLEdBQWtCLEdBRzlCLENBQ0FnQyxtQkFDSSxNQUFNSyxFQUFXaEwsS0FBSytELGNBQWMsYUFDaENpSCxhQUFvQnBELGFBQ3BCb0QsRUFBUzNDLGlCQUFpQixTQUFTLEtBQy9CckksS0FBS3FKLFdBQVc0QixpQkFDaEJqTCxLQUFLK0gsT0FBTy9ILEtBQUtxSixXQUFXdUMsd0JBQXdCLEdBR2hFLEVBRUpnRCxFQUE4QixJQUFJYSxRQUFXWixFQUEyQyxXQUNyRCxhQUEzQixtQkFDQTdPLEtBQUtxSixXQUFXTSwyQkFFeEIsRUFDQSxVLHlIQ3RFSTNILEVBQVUsQ0FBQyxFQUVmQSxFQUFRZ0Qsa0JBQW9CLElBQzVCaEQsRUFBUTBDLGNBQWdCLElBRWxCMUMsRUFBUTBCLE9BQVMsU0FBYyxLQUFNLFFBRTNDMUIsRUFBUWUsT0FBUyxJQUNqQmYsRUFBUStDLG1CQUFxQixJQUVoQixJQUFJLElBQVMvQyxHQUtKLEtBQVcsWUFBaUIsV0NoQmxEa0osRUFBWUUsU0FDWnNFLGVBQWVDLE9BQU8sVUFBVyxHQUNqQ0QsZUFBZUMsT0FBTyxlQUFnQixHQUN0Q0QsZUFBZUMsT0FBTyxzQkFBdUIsR0FDN0NELGVBQWVDLE9BQU8scUJBQXNCLEdBQzVDRCxlQUFlQyxPQUFPLGlCQUFrQixHQUN4Q0QsZUFBZUMsT0FBTyxrQkFBbUIsR0FDekNELGVBQWVDLE9BQU8sVUFBVyxHQUNqQ0QsZUFBZUMsT0FBTyxvQkFBcUIsRSIsInNvdXJjZXMiOlsid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Nzcy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL0JvdHRvbVNoZWV0LnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0cy9jYXRlZ29yeS1hc2lhbi5wbmciLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvYXNzZXRzL2NhdGVnb3J5LWNoaW5lc2UucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0cy9jYXRlZ29yeS1qYXBhbmVzZS5wbmciLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvYXNzZXRzL2NhdGVnb3J5LWtvcmVhbi5wbmciLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvYXNzZXRzL2NhdGVnb3J5LXdlc3Rlcm4ucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0cy9jYXRlZ29yeS1ldGMucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0cy9hZGQtYnV0dG9uLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldHMvZmF2b3JpdGUtaWNvbi1maWxsZWQucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0cy9mYXZvcml0ZS1pY29uLWxpbmVkLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy91dGlscy9pbmRleC50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb25zdGFudHMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9UYWJCYXIudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9SZXN0YXVyYW50TGlzdC50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL1Jlc3RhdXJhbnRJdGVtLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2RvbWFpbi9yZXN0YXVyYW50cy50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9kb21haW4vQ29udHJvbGxlci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9kb21haW4vaW5wdXRWYWxpZGF0b3IudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9Tb3J0aW5nU2VsZWN0Qm94LnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvQ2F0ZWdvcnlTZWxlY3RCb3gudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9BZGRSZXN0YXVyYW50LnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvTmF2QmFyLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvUmVzdGF1cmFudERldGFpbC50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jc3Mvc3R5bGUuY3NzPzlmY2QiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXG4gIHBhZGRpbmc6IDA7XFxuICBtYXJnaW46IDA7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG51bCxcXG5saSB7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbn1cXG5cXG5odG1sLFxcbmJvZHkge1xcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XFxuICBmb250LXNpemU6IDE2cHg7XFxufVxcblxcbi8qIENvbG9ycyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG46cm9vdCB7XFxuICAtLXByaW1hcnktY29sb3I6ICNlYzRhMGE7XFxuICAtLWxpZ2h0ZW4tY29sb3I6ICNmNmE4OGE7XFxuICAtLWdyZXktMTAwOiAjZmZmZmZmO1xcbiAgLS1ncmV5LTIwMDogI2QwZDVkZDtcXG4gIC0tZ3JleS0zMDA6ICM2NjcwODU7XFxuICAtLWdyZXktNDAwOiAjMzQ0MDU0O1xcbiAgLS1ncmV5LTUwMDogIzAwMDAwMDtcXG59XFxuXFxuLyogVHlwb2dyYXBoeSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi50ZXh0LXRpdGxlIHtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuLnRleHQtc3VidGl0bGUge1xcbiAgZm9udC1zaXplOiAxOHB4O1xcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XFxuICBmb250LXdlaWdodDogNjAwO1xcbn1cXG5cXG4udGV4dC1ib2R5IHtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG59XFxuXFxuLnRleHQtY2FwdGlvbiB7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBsaW5lLWhlaWdodDogMjBweDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxufVxcblxcbi8qIEdOQiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4uZ25iIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgaGVpZ2h0OiA2NHB4O1xcblxcbiAgcGFkZGluZzogMCAxNnB4O1xcblxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxufVxcblxcbi5nbmJfX3RpdGxlIHtcXG4gIGNvbG9yOiAjZmNmY2ZkO1xcbn1cXG5cXG4uZ25iX19idXR0b24ge1xcbiAgaGVpZ2h0OiA0MHB4O1xcblxcbiAgYm9yZGVyOiBub25lO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuXFxuICBmb250LXNpemU6IDI0cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5nbmJfX2J1dHRvbiBpbWcge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICB3aWR0aDogNDBweDtcXG4gIGhlaWdodDogNDBweDtcXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XFxufVxcblxcbi8qIOuplOuJtCDtg63rsJQgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLnRhYi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIHBhZGRpbmc6IDIwcHggMTVweCAxMHB4IDE1cHg7XFxufVxcblxcbi50YWIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgbGluZS1oZWlnaHQ6IDM1cHg7XFxuXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuXFxuICBjb2xvcjogIzY2NzA4NTtcXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZDBkNWRkO1xcbn1cXG5cXG4ucmFkaW86Y2hlY2tlZCArIGxhYmVsIHtcXG4gIGNvbG9yOiAjZWM0YTBhO1xcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNlYzRhMGE7XFxufVxcblxcbi5yYWRpbyB7XFxuICBhcHBlYXJhbmNlOiBub25lO1xcbn1cXG5cXG4vKiDsnYzsi53soJAg66qp66GdICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcblxcbi8qIOy5tO2FjOqzoOumrC/soJXroKwg7ZWE7YSwICovXFxuLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcblxcbiAgcGFkZGluZzogMCAxNnB4O1xcbiAgbWFyZ2luLXRvcDogMjRweDtcXG59XFxuXFxuLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lciBzZWxlY3Qge1xcbiAgaGVpZ2h0OiA0NHB4O1xcbiAgbWluLXdpZHRoOiAxMjVweDtcXG5cXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkMGQ1ZGQ7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLnJlc3RhdXJhbnQtZmlsdGVyIHtcXG4gIHBhZGRpbmc6IDhweDtcXG59XFxuXFxuLyog7J2M7Iud7KCQIOuqqeuhnSAqL1xcbi5yZXN0YXVyYW50LWxpc3QtY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbiAgcGFkZGluZzogMCAxNnB4O1xcbiAgbWFyZ2luOiAxNnB4IDA7XFxufVxcblxcbi5yZXN0YXVyYW50IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG5cXG4gIHBhZGRpbmc6IDE2cHggOHB4O1xcblxcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlOWVhZWQ7XFxufVxcblxcbi5yZXN0YXVyYW50X19jYXRlZ29yeSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDY0cHg7XFxuICBoZWlnaHQ6IDY0cHg7XFxuICBtaW4td2lkdGg6IDY0cHg7XFxuICBtaW4taGVpZ2h0OiA2NHB4O1xcblxcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xcblxcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZDogdmFyKC0tbGlnaHRlbi1jb2xvcik7XFxufVxcblxcbi5jYXRlZ29yeS1pY29uIHtcXG4gIHdpZHRoOiAzNnB4O1xcbiAgaGVpZ2h0OiAzNnB4O1xcbn1cXG5cXG4ucmVzdGF1cmFudF9faW5mbyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1ncm93OiAxO1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX25hbWUge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fZGlzdGFuY2Uge1xcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fZGVzY3JpcHRpb24ge1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuXFxuICBwYWRkaW5nLXRvcDogOHB4O1xcblxcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcXG59XFxuXFxuLyog7J2M7Iud7KCQIOy2lOqwgCDrqqjri6wgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLm1vZGFsIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5tb2RhbC0tb3BlbiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLm1vZGFsLWJhY2tkcm9wIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG5cXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zNSk7XFxufVxcblxcbi5tb2RhbC1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IGF1dG87XFxuICBtYXgtaGVpZ2h0OiAxMDAlO1xcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcblxcbiAgcGFkZGluZzogMzJweCAxNnB4O1xcblxcbiAgYm9yZGVyLXJhZGl1czogOHB4IDhweCAwcHggMHB4O1xcbiAgYmFja2dyb3VuZDogdmFyKC0tZ3JleS0xMDApO1xcbn1cXG5cXG4ubW9kYWwtdGl0bGUge1xcbiAgbWFyZ2luLWJvdHRvbTogMzZweDtcXG59XFxuXFxuLmZvcm0taXRlbSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5cXG4gIG1hcmdpbi1ib3R0b206IDM2cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0gbGFiZWwge1xcbiAgY29sb3I6IHZhcigtLWdyZXktNDAwKTtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuXFxuLmZvcm0taXRlbS0tcmVxdWlyZWQgbGFiZWw6OmFmdGVyIHtcXG4gIHBhZGRpbmctbGVmdDogNHB4O1xcblxcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbiAgY29udGVudDogXFxcIipcXFwiO1xcbn1cXG5cXG4uZm9ybS1pdGVtIC5oZWxwLXRleHQge1xcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXG59XFxuXFxuLmZvcm0taXRlbSBpbnB1dCxcXG4uZm9ybS1pdGVtIHRleHRhcmVhLFxcbi5mb3JtLWl0ZW0gc2VsZWN0IHtcXG4gIHBhZGRpbmc6IDhweDtcXG4gIG1hcmdpbjogNnB4IDA7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuXFxuICBmb250LXNpemU6IDE2cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0gdGV4dGFyZWEge1xcbiAgcmVzaXplOiBub25lO1xcbn1cXG5cXG4uZm9ybS1pdGVtIHNlbGVjdCB7XFxuICBoZWlnaHQ6IDQ0cHg7XFxuXFxuICBwYWRkaW5nOiA4cHg7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcbn1cXG5cXG5pbnB1dFtuYW1lPVxcXCJuYW1lXFxcIl0sXFxuaW5wdXRbbmFtZT1cXFwibGlua1xcXCJdIHtcXG4gIGhlaWdodDogNDRweDtcXG59XFxuXFxuLmJ1dHRvbi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLmJ1dHRvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNDRweDtcXG5cXG4gIG1hcmdpbi1yaWdodDogMTZweDtcXG5cXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG5cXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5idXR0b246bGFzdC1jaGlsZCB7XFxuICBtYXJnaW4tcmlnaHQ6IDA7XFxufVxcblxcbi5idXR0b24tLXNlY29uZGFyeSB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTMwMCk7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTMwMCk7XFxufVxcblxcbi5idXR0b24tLXByaW1hcnkge1xcbiAgYmFja2dyb3VuZDogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0xMDApO1xcbn1cXG5cXG4vKiDsnYzsi53soJAg7IOB7IS4IOuqqOuLrCAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4uaWNvbi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xcbn1cXG5cXG4uaW5mby1jb250YWluZXIge1xcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX2RldGFpbF9fbmFtZSB7XFxuICBtYXJnaW46IDE1cHggMCAxMHB4IDA7XFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgZm9udC1zaXplOiAyMHB4O1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fZGV0YWlsX19kaXN0YW5jZSB7XFxuICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxufVxcblxcbi5yZXN0YXVyYW50X19kZXRhaWxfX2Rlc2NyaXB0aW9uIHtcXG4gIG1hcmdpbjogMTVweCAwIDEwcHggMDtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxVQUFVO0VBQ1YsU0FBUztFQUNULHNCQUFzQjtBQUN4Qjs7QUFFQTs7RUFFRSxnQkFBZ0I7QUFDbEI7O0FBRUE7O0VBRUUsdUJBQXVCO0VBQ3ZCLGVBQWU7QUFDakI7O0FBRUEsbURBQW1EO0FBQ25EO0VBQ0Usd0JBQXdCO0VBQ3hCLHdCQUF3QjtFQUN4QixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCOztBQUVBLG1EQUFtRDtBQUNuRDtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCOztBQUVBLG1EQUFtRDtBQUNuRDtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLFlBQVk7O0VBRVosZUFBZTs7RUFFZixzQ0FBc0M7QUFDeEM7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsWUFB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c0I7QUFDeEI7O0FBRUE7RUFDRSxnQ0FBZ0M7O0VBRWhDLHNCQUFzQjtBQUN4Qjs7QUFFQSxzREFBc0Q7QUFDdEQ7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqIHtcXG4gIHBhZGRpbmc6IDA7XFxuICBtYXJnaW46IDA7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG51bCxcXG5saSB7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbn1cXG5cXG5odG1sLFxcbmJvZHkge1xcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XFxuICBmb250LXNpemU6IDE2cHg7XFxufVxcblxcbi8qIENvbG9ycyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG46cm9vdCB7XFxuICAtLXByaW1hcnktY29sb3I6ICNlYzRhMGE7XFxuICAtLWxpZ2h0ZW4tY29sb3I6ICNmNmE4OGE7XFxuICAtLWdyZXktMTAwOiAjZmZmZmZmO1xcbiAgLS1ncmV5LTIwMDogI2QwZDVkZDtcXG4gIC0tZ3JleS0zMDA6ICM2NjcwODU7XFxuICAtLWdyZXktNDAwOiAjMzQ0MDU0O1xcbiAgLS1ncmV5LTUwMDogIzAwMDAwMDtcXG59XFxuXFxuLyogVHlwb2dyYXBoeSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi50ZXh0LXRpdGxlIHtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuLnRleHQtc3VidGl0bGUge1xcbiAgZm9udC1zaXplOiAxOHB4O1xcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XFxuICBmb250LXdlaWdodDogNjAwO1xcbn1cXG5cXG4udGV4dC1ib2R5IHtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG59XFxuXFxuLnRleHQtY2FwdGlvbiB7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBsaW5lLWhlaWdodDogMjBweDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxufVxcblxcbi8qIEdOQiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4uZ25iIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgaGVpZ2h0OiA2NHB4O1xcblxcbiAgcGFkZGluZzogMCAxNnB4O1xcblxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxufVxcblxcbi5nbmJfX3RpdGxlIHtcXG4gIGNvbG9yOiAjZmNmY2ZkO1xcbn1cXG5cXG4uZ25iX19idXR0b24ge1xcbiAgaGVpZ2h0OiA0MHB4O1xcblxcbiAgYm9yZGVyOiBub25lO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuXFxuICBmb250LXNpemU6IDI0cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5nbmJfX2J1dHRvbiBpbWcge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICB3aWR0aDogNDBweDtcXG4gIGhlaWdodDogNDBweDtcXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XFxufVxcblxcbi8qIOuplOuJtCDtg63rsJQgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLnRhYi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIHBhZGRpbmc6IDIwcHggMTVweCAxMHB4IDE1cHg7XFxufVxcblxcbi50YWIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgbGluZS1oZWlnaHQ6IDM1cHg7XFxuXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuXFxuICBjb2xvcjogIzY2NzA4NTtcXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZDBkNWRkO1xcbn1cXG5cXG4ucmFkaW86Y2hlY2tlZCArIGxhYmVsIHtcXG4gIGNvbG9yOiAjZWM0YTBhO1xcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNlYzRhMGE7XFxufVxcblxcbi5yYWRpbyB7XFxuICBhcHBlYXJhbmNlOiBub25lO1xcbn1cXG5cXG4vKiDsnYzsi53soJAg66qp66GdICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcblxcbi8qIOy5tO2FjOqzoOumrC/soJXroKwg7ZWE7YSwICovXFxuLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcblxcbiAgcGFkZGluZzogMCAxNnB4O1xcbiAgbWFyZ2luLXRvcDogMjRweDtcXG59XFxuXFxuLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lciBzZWxlY3Qge1xcbiAgaGVpZ2h0OiA0NHB4O1xcbiAgbWluLXdpZHRoOiAxMjVweDtcXG5cXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkMGQ1ZGQ7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLnJlc3RhdXJhbnQtZmlsdGVyIHtcXG4gIHBhZGRpbmc6IDhweDtcXG59XFxuXFxuLyog7J2M7Iud7KCQIOuqqeuhnSAqL1xcbi5yZXN0YXVyYW50LWxpc3QtY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbiAgcGFkZGluZzogMCAxNnB4O1xcbiAgbWFyZ2luOiAxNnB4IDA7XFxufVxcblxcbi5yZXN0YXVyYW50IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG5cXG4gIHBhZGRpbmc6IDE2cHggOHB4O1xcblxcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlOWVhZWQ7XFxufVxcblxcbi5yZXN0YXVyYW50X19jYXRlZ29yeSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDY0cHg7XFxuICBoZWlnaHQ6IDY0cHg7XFxuICBtaW4td2lkdGg6IDY0cHg7XFxuICBtaW4taGVpZ2h0OiA2NHB4O1xcblxcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xcblxcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZDogdmFyKC0tbGlnaHRlbi1jb2xvcik7XFxufVxcblxcbi5jYXRlZ29yeS1pY29uIHtcXG4gIHdpZHRoOiAzNnB4O1xcbiAgaGVpZ2h0OiAzNnB4O1xcbn1cXG5cXG4ucmVzdGF1cmFudF9faW5mbyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1ncm93OiAxO1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX25hbWUge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fZGlzdGFuY2Uge1xcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fZGVzY3JpcHRpb24ge1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuXFxuICBwYWRkaW5nLXRvcDogOHB4O1xcblxcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcXG59XFxuXFxuLyog7J2M7Iud7KCQIOy2lOqwgCDrqqjri6wgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLm1vZGFsIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5tb2RhbC0tb3BlbiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLm1vZGFsLWJhY2tkcm9wIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG5cXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zNSk7XFxufVxcblxcbi5tb2RhbC1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IGF1dG87XFxuICBtYXgtaGVpZ2h0OiAxMDAlO1xcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcblxcbiAgcGFkZGluZzogMzJweCAxNnB4O1xcblxcbiAgYm9yZGVyLXJhZGl1czogOHB4IDhweCAwcHggMHB4O1xcbiAgYmFja2dyb3VuZDogdmFyKC0tZ3JleS0xMDApO1xcbn1cXG5cXG4ubW9kYWwtdGl0bGUge1xcbiAgbWFyZ2luLWJvdHRvbTogMzZweDtcXG59XFxuXFxuLmZvcm0taXRlbSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5cXG4gIG1hcmdpbi1ib3R0b206IDM2cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0gbGFiZWwge1xcbiAgY29sb3I6IHZhcigtLWdyZXktNDAwKTtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuXFxuLmZvcm0taXRlbS0tcmVxdWlyZWQgbGFiZWw6OmFmdGVyIHtcXG4gIHBhZGRpbmctbGVmdDogNHB4O1xcblxcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbiAgY29udGVudDogXFxcIipcXFwiO1xcbn1cXG5cXG4uZm9ybS1pdGVtIC5oZWxwLXRleHQge1xcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXG59XFxuXFxuLmZvcm0taXRlbSBpbnB1dCxcXG4uZm9ybS1pdGVtIHRleHRhcmVhLFxcbi5mb3JtLWl0ZW0gc2VsZWN0IHtcXG4gIHBhZGRpbmc6IDhweDtcXG4gIG1hcmdpbjogNnB4IDA7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuXFxuICBmb250LXNpemU6IDE2cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0gdGV4dGFyZWEge1xcbiAgcmVzaXplOiBub25lO1xcbn1cXG5cXG4uZm9ybS1pdGVtIHNlbGVjdCB7XFxuICBoZWlnaHQ6IDQ0cHg7XFxuXFxuICBwYWRkaW5nOiA4cHg7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcbn1cXG5cXG5pbnB1dFtuYW1lPVxcXCJuYW1lXFxcIl0sXFxuaW5wdXRbbmFtZT1cXFwibGlua1xcXCJdIHtcXG4gIGhlaWdodDogNDRweDtcXG59XFxuXFxuLmJ1dHRvbi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLmJ1dHRvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNDRweDtcXG5cXG4gIG1hcmdpbi1yaWdodDogMTZweDtcXG5cXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG5cXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5idXR0b246bGFzdC1jaGlsZCB7XFxuICBtYXJnaW4tcmlnaHQ6IDA7XFxufVxcblxcbi5idXR0b24tLXNlY29uZGFyeSB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTMwMCk7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTMwMCk7XFxufVxcblxcbi5idXR0b24tLXByaW1hcnkge1xcbiAgYmFja2dyb3VuZDogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0xMDApO1xcbn1cXG5cXG4vKiDsnYzsi53soJAg7IOB7IS4IOuqqOuLrCAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4uaWNvbi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xcbn1cXG5cXG4uaW5mby1jb250YWluZXIge1xcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX2RldGFpbF9fbmFtZSB7XFxuICBtYXJnaW46IDE1cHggMCAxMHB4IDA7XFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgZm9udC1zaXplOiAyMHB4O1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fZGV0YWlsX19kaXN0YW5jZSB7XFxuICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxufVxcblxcbi5yZXN0YXVyYW50X19kZXRhaWxfX2Rlc2NyaXB0aW9uIHtcXG4gIG1hcmdpbjogMTVweCAwIDEwcHggMDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsImNsYXNzIEJvdHRvbVNoZWV0IGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cbiAgICByZW5kZXIoY2hpbGRyZW4pIHtcbiAgICAgICAgdGhpcy5pbm5lckhUTUwgPSBgXG4gICAgICA8ZGl2IGlkPVwibW9kYWxCYWNrZHJvcFwiIGNsYXNzPVwibW9kYWwtYmFja2Ryb3BcIj48L2Rpdj5cbiAgICAgIDxkaXYgaWQ9XCJtb2RhbFwiIGNsYXNzPVwibW9kYWwtY29udGFpbmVyXCI+XG4gICAgICAgICR7Y2hpbGRyZW59XG4gICAgICA8L2Rpdj5cbiAgICBgO1xuICAgICAgICB0aGlzLm9uQ2xpY2tCYWNrZHJvcCgpO1xuICAgIH1cbiAgICBvbkNsaWNrQmFja2Ryb3AoKSB7XG4gICAgICAgIGNvbnN0IG1vZGFsQmFja2Ryb3AgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vZGFsQmFja2Ryb3BcIik7XG4gICAgICAgIG1vZGFsQmFja2Ryb3A/LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBvcGVuKGNoaWxkcmVuKSB7XG4gICAgICAgIGNvbnN0IGJvdHRvbVNoZWV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJib3R0b21TaGVldFwiKTtcbiAgICAgICAgYm90dG9tU2hlZXQ/LmNsYXNzTGlzdC5hZGQoXCJtb2RhbC0tb3BlblwiKTtcbiAgICAgICAgdGhpcy5yZW5kZXIoY2hpbGRyZW4pO1xuICAgIH1cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgY29uc3QgYm90dG9tU2hlZXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJvdHRvbVNoZWV0XCIpO1xuICAgICAgICBib3R0b21TaGVldD8uY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsLS1vcGVuXCIpO1xuICAgICAgICB0aGlzLnJlbmRlcihcIlwiKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBCb3R0b21TaGVldDtcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS1hc2lhbi5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiY2F0ZWdvcnktY2hpbmVzZS5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiY2F0ZWdvcnktamFwYW5lc2UucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImNhdGVnb3J5LWtvcmVhbi5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiY2F0ZWdvcnktd2VzdGVybi5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiY2F0ZWdvcnktZXRjLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJhZGQtYnV0dG9uLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmYXZvcml0ZS1pY29uLWZpbGxlZC5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZmF2b3JpdGUtaWNvbi1saW5lZC5wbmdcIjsiLCJpbXBvcnQgQm90dG9tU2hlZXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQm90dG9tU2hlZXRcIjtcbmltcG9ydCB7IGNhdGVnb3J5QXNpYW4sIGNhdGVnb3J5Q2hpbmVzZSwgY2F0ZWdvcnlKYXBhbmVzZSwgY2F0ZWdvcnlLb3JlYW4sIGNhdGVnb3J5V2VzdGVybiwgY2F0ZWdvcnlFdGMsIH0gZnJvbSBcIi4uL2Fzc2V0cy9cIjtcbmV4cG9ydCBjb25zdCBjbG9zZUJvdHRvbVNoZWV0ID0gKCkgPT4ge1xuICAgIGNvbnN0IGJvdHRvbVNoZWV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJib3R0b21TaGVldFwiKTtcbiAgICBpZiAoIShib3R0b21TaGVldCBpbnN0YW5jZW9mIEJvdHRvbVNoZWV0KSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGJvdHRvbVNoZWV0LmNsb3NlKCk7XG59O1xuZXhwb3J0IGNvbnN0IG9wZW5Cb3R0b21TaGVldCA9IChjaGlsZHJlbikgPT4ge1xuICAgIGNvbnN0IGJvdHRvbVNoZWV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJib3R0b21TaGVldFwiKTtcbiAgICBpZiAoIShib3R0b21TaGVldCBpbnN0YW5jZW9mIEJvdHRvbVNoZWV0KSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGJvdHRvbVNoZWV0Lm9wZW4oY2hpbGRyZW4pO1xufTtcbmV4cG9ydCBjb25zdCBoaWRlUmVzdGF1cmFudEZpbHRlciA9ICgpID0+IHtcbiAgICBjb25zdCByZXN0YXVyYW50RmlsdGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZXN0YXVyYW50RmlsdGVyQ29udGFpbmVyXCIpO1xuICAgIGlmICghKHJlc3RhdXJhbnRGaWx0ZXIgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICByZXN0YXVyYW50RmlsdGVyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbn07XG5leHBvcnQgY29uc3Qgc2hvd1Jlc3RhdXJhbnRGaWx0ZXIgPSAoKSA9PiB7XG4gICAgY29uc3QgcmVzdGF1cmFudEZpbHRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVzdGF1cmFudEZpbHRlckNvbnRhaW5lclwiKTtcbiAgICBpZiAoIShyZXN0YXVyYW50RmlsdGVyIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcmVzdGF1cmFudEZpbHRlci5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcbn07XG5leHBvcnQgY29uc3QgZmluZEltYWdlID0gKGNhdGVnb3J5KSA9PiB7XG4gICAgY29uc3QgaW1hZ2VTcmMgPSB7XG4gICAgICAgIO2VnOyLnTogY2F0ZWdvcnlLb3JlYW4sXG4gICAgICAgIOykkeyLnTogY2F0ZWdvcnlDaGluZXNlLFxuICAgICAgICDsnbzsi506IGNhdGVnb3J5SmFwYW5lc2UsXG4gICAgICAgIOyWkeyLnTogY2F0ZWdvcnlXZXN0ZXJuLFxuICAgICAgICDslYTsi5zslYg6IGNhdGVnb3J5QXNpYW4sXG4gICAgICAgIOq4sO2DgDogY2F0ZWdvcnlFdGMsXG4gICAgfTtcbiAgICByZXR1cm4gaW1hZ2VTcmNbY2F0ZWdvcnldO1xufTtcbiIsImNvbnN0IEFMTF9DQVRFR09SWSA9IFwi7KCE7LK0XCI7XG5jb25zdCBTT1JUX0ZBSUxFRF9OVU1CRVIgPSAwO1xuY29uc3QgTk9fRUxFTUVOVCA9IFwibm9uZVwiO1xuY29uc3QgTk9UX1NFTEVDVEVEX0lOREVYID0gLTE7XG5jb25zdCBVUkxfUkVHRVggPSAvKGh0dHBbc10/fGZ0cCk6XFwvXFwvKHd3d1xcLik/Wy1hLXpBLVowLTlAOiUuX1xcK34jPV17MiwyNTZ9XFwuW2Etel17Miw2fS9nO1xuY29uc3QgRFVNTVlfREFUQSA9IFtcbiAgICB7XG4gICAgICAgIGNhdGVnb3J5OiBcIuykkeyLnVwiLFxuICAgICAgICBuYW1lOiBcIuywkOy5nFwiLFxuICAgICAgICBkaXN0YW5jZTogNSxcbiAgICAgICAgZGVzY3JpcHRpb246IFwi7LCQ7Lmc65Ok7J20656RIOqwgOuKlCDspJHqta3sp5FcIixcbiAgICAgICAgbGluazogXCJcIixcbiAgICAgICAgaXNGYXZvcml0ZTogZmFsc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGNhdGVnb3J5OiBcIuq4sO2DgFwiLFxuICAgICAgICBuYW1lOiBcIuy7pO2UvOuyoOuEpFwiLFxuICAgICAgICBkaXN0YW5jZTogNSxcbiAgICAgICAgZGVzY3JpcHRpb246IFwi7ISx64u067mM65SpIOqxtOusvOyXkCDsnojripQg7Luk7ZS867Kg64SkXCIsXG4gICAgICAgIGxpbms6IFwiXCIsXG4gICAgICAgIGlzRmF2b3JpdGU6IGZhbHNlLFxuICAgIH0sXG4gICAge1xuICAgICAgICBjYXRlZ29yeTogXCLquLDtg4BcIixcbiAgICAgICAgbmFtZTogXCLsiqTtg4DrsoXsiqQg7ISg66aJ7Jet7KCQXCIsXG4gICAgICAgIGRpc3RhbmNlOiA1LFxuICAgICAgICBkZXNjcmlwdGlvbjogXCLrqbTri7TtlZjquLAg7KKL7J2AIOqzsyDsiqTtg4DrsoXsiqQg7Iuc64GM67KF7KCB7ZWoXCIsXG4gICAgICAgIGxpbms6IFwiXCIsXG4gICAgICAgIGlzRmF2b3JpdGU6IGZhbHNlLFxuICAgIH0sXG4gICAge1xuICAgICAgICBjYXRlZ29yeTogXCLtlZzsi51cIixcbiAgICAgICAgbmFtZTogXCLsmIHrj5nsubzqta3siJhcIixcbiAgICAgICAgZGlzdGFuY2U6IDE1LFxuICAgICAgICBkZXNjcmlwdGlvbjogXCLrqYDquLQg7ZWc642wIOq3uOuemOuPhCA5LDAwMOybkOydtOudvOuKlCDqsIDqsqnsl5Ag7KCA66C07ZWY6rKMIOyggeqyjCDrqLnsnYQg7IiYIOyeiOuKlCDqs7MuIOyngOqwkSDri6TsnbTslrTtirjtlZjquLAg7KKL7J2AIOqzs1wiLFxuICAgICAgICBsaW5rOiBcIlwiLFxuICAgICAgICBpc0Zhdm9yaXRlOiBmYWxzZSxcbiAgICB9LFxuXTtcbmV4cG9ydCB7IEFMTF9DQVRFR09SWSwgU09SVF9GQUlMRURfTlVNQkVSLCBOT19FTEVNRU5ULCBVUkxfUkVHRVgsIE5PVF9TRUxFQ1RFRF9JTkRFWCwgRFVNTVlfREFUQSwgfTtcbiIsImltcG9ydCB7IE5PX0VMRU1FTlQgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgQ29udHJvbGxlciBmcm9tIFwiLi4vZG9tYWluL0NvbnRyb2xsZXJcIjtcbmltcG9ydCB7IGhpZGVSZXN0YXVyYW50RmlsdGVyLCBzaG93UmVzdGF1cmFudEZpbHRlciB9IGZyb20gXCIuLi91dGlsc1wiO1xuY2xhc3MgVGFiQmFyIGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmNvbnRyb2xsZXIgPSBDb250cm9sbGVyLmdldEluc3RhbmNlKCk7XG4gICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgICAgIHRoaXMub25DbGlja1RhYigpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHRoaXMuaW5uZXJIVE1MID0gYFxuICAgICAgPGZvcm0gaWQ9XCJ0YWJDb250YWluZXJcIiBjbGFzcz1cInRhYi1jb250YWluZXJcIj5cbiAgICAgICAgPGlucHV0IGlkPVwiYWxsXCIgbmFtZT1cInRhYlwiIHZhbHVlPVwiYWxsXCIgdHlwZT1cInJhZGlvXCIgY2xhc3M9XCJyYWRpb1wiIGNoZWNrZWQ+XG4gICAgICAgIDxsYWJlbCBpZD1cImFsbFRhYlwiIGNsYXNzPVwidGFiIHRhYi1zZWxlY3RlZFwiIGZvcj1cImFsbFwiPuuqqOuToCDsnYzsi53soJA8L2xhYmVsPlxuICAgICAgICA8aW5wdXQgaWQ9XCJmYXZvcml0ZVwiIG5hbWU9XCJ0YWJcIiB2YWx1ZT1cImZhdm9yaXRlXCIgdHlwZT1cInJhZGlvXCIgY2xhc3M9XCJyYWRpb1wiPlxuICAgICAgICA8bGFiZWwgaWQ9XCJmYXZvcml0ZVRhYlwiIGNsYXNzPVwidGFiXCIgZm9yPVwiZmF2b3JpdGVcIj7snpDso7wg6rCA64qUIOydjOyLneygkDwvbGFiZWw+XG4gICAgICA8L2Zvcm0+XG4gICAgYDtcbiAgICB9XG4gICAgb25DbGlja1RhYigpIHtcbiAgICAgICAgY29uc3QgdGFiQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YWJDb250YWluZXJcIik7XG4gICAgICAgIGlmICh0YWJDb250YWluZXIgaW5zdGFuY2VvZiBIVE1MRm9ybUVsZW1lbnQpIHtcbiAgICAgICAgICAgIHRhYkNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoVGFiQmFyLmdldEN1cnJlbnRUYWIoKSA9PSBcImZhdm9yaXRlXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaGlkZVJlc3RhdXJhbnRGaWx0ZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyLnNldEZhdm9yaXRlUmVzdGF1cmFudExpc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzaG93UmVzdGF1cmFudEZpbHRlcigpO1xuICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlci5sb2FkTG9jYWxTdG9yYWdlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgZ2V0Q3VycmVudFRhYigpIHtcbiAgICAgICAgY29uc3QgY3VycmVudFRhYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJ0YWJcIl06Y2hlY2tlZCcpO1xuICAgICAgICBpZiAoIShjdXJyZW50VGFiIGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudCkpIHtcbiAgICAgICAgICAgIHJldHVybiBOT19FTEVNRU5UO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjdXJyZW50VGFiLnZhbHVlO1xuICAgIH1cbiAgICBzdGF0aWMgc2V0Q3VycmVudFRhYihjdXJyZW50VGFiKSB7XG4gICAgICAgIGNvbnN0IHRhYiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGN1cnJlbnRUYWIpO1xuICAgICAgICBpZiAodGFiIGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudCkge1xuICAgICAgICAgICAgdGFiLmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgVGFiQmFyO1xuIiwiaW1wb3J0IENvbnRyb2xsZXIgZnJvbSBcIi4uL2RvbWFpbi9Db250cm9sbGVyXCI7XG5pbXBvcnQgeyBvcGVuQm90dG9tU2hlZXQgfSBmcm9tIFwiLi4vdXRpbHNcIjtcbmltcG9ydCBSZXN0YXVyYW50SXRlbSBmcm9tIFwiLi9SZXN0YXVyYW50SXRlbVwiO1xuaW1wb3J0IFRhYkJhciBmcm9tIFwiLi9UYWJCYXJcIjtcbmNsYXNzIFJlc3RhdXJhbnRMaXN0IGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmNvbnRyb2xsZXIgPSBDb250cm9sbGVyLmdldEluc3RhbmNlKCk7XG4gICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgdGhpcy5pbm5lckhUTUwgPSBgXG4gICAgICA8c2VjdGlvbiBpZD1cInJlc3RhdXJhbnRMaXN0XCIgY2xhc3M9XCJyZXN0YXVyYW50LWxpc3QtY29udGFpbmVyXCI+XG4gICAgICAgIDx1bCBjbGFzcz1cInJlc3RhdXJhbnQtbGlzdFwiPlxuICAgICAgICAke3RoaXMuY29udHJvbGxlclxuICAgICAgICAgICAgLmdldFJlc3RhdXJhbnRzKClcbiAgICAgICAgICAgIC5tYXAoKHJlc3RhdXJhbnQpID0+IG5ldyBSZXN0YXVyYW50SXRlbSgpLnJlbmRlcihyZXN0YXVyYW50KSlcbiAgICAgICAgICAgIC5qb2luKFwiXCIpfVxuICAgICAgICA8L3VsPlxuICAgICAgPC9zZWN0aW9uPlxuICAgIGA7XG4gICAgICAgIHRoaXMub25DbGlja1Jlc3RhdXJhbnRJdGVtKCk7XG4gICAgICAgIHRoaXMub25Ub2dnbGVGYXZvcml0ZSgpO1xuICAgIH1cbiAgICBvbkNsaWNrUmVzdGF1cmFudEl0ZW0oKSB7XG4gICAgICAgIGNvbnN0IHJlc3RhdXJhbnRJdGVtcyA9IHRoaXMucXVlcnlTZWxlY3RvckFsbChcIiNyZXN0YXVyYW50SW5mb1wiKTtcbiAgICAgICAgcmVzdGF1cmFudEl0ZW1zLmZvckVhY2goKHJlc3RhdXJhbnRJdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgcmVzdGF1cmFudEl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRyb2xsZXIuc2V0U2VsZWN0ZWRSZXN0YXVyYW50SW5kZXgoaW5kZXgpO1xuICAgICAgICAgICAgICAgIG9wZW5Cb3R0b21TaGVldChcIjxyZXN0YXVyYW50LWRldGFpbCAvPlwiKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgb25Ub2dnbGVGYXZvcml0ZSgpIHtcbiAgICAgICAgY29uc3QgZmF2b3JpdGVzID0gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKFwiI2Zhdm9yaXRlXCIpO1xuICAgICAgICBmYXZvcml0ZXMuZm9yRWFjaCgoZmF2b3JpdGUsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBmYXZvcml0ZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlci5zZXRTZWxlY3RlZFJlc3RhdXJhbnRJbmRleChpbmRleCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyLnRvZ2dsZUZhdm9yaXRlKCk7XG4gICAgICAgICAgICAgICAgaWYgKFRhYkJhci5nZXRDdXJyZW50VGFiKCkgPT09IFwiZmF2b3JpdGVcIikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRyb2xsZXIuc2V0RmF2b3JpdGVSZXN0YXVyYW50TGlzdCgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlci5sb2FkTG9jYWxTdG9yYWdlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgUmVzdGF1cmFudExpc3Q7XG4iLCJpbXBvcnQgeyBmYXZvcml0ZUljb25GaWxsZWQsIGZhdm9yaXRlSWNvbkxpbmVkIH0gZnJvbSBcIi4uL2Fzc2V0cy9cIjtcbmltcG9ydCB7IGZpbmRJbWFnZSB9IGZyb20gXCIuLi91dGlsc1wiO1xuY2xhc3MgUmVzdGF1cmFudEl0ZW0ge1xuICAgIHJlbmRlcihyZXN0YXVyYW50KSB7XG4gICAgICAgIHJldHVybiBgXG4gICAgICA8bGkgY2xhc3M9XCJyZXN0YXVyYW50XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJyZXN0YXVyYW50X19jYXRlZ29yeVwiPlxuICAgICAgICAgIDxpbWcgc3JjPVwiJHtmaW5kSW1hZ2UocmVzdGF1cmFudC5jYXRlZ29yeSl9XCIgYWx0PVwiJHtyZXN0YXVyYW50LmNhdGVnb3J5fVwiIGNsYXNzPVwiY2F0ZWdvcnktaWNvblwiPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cInJlc3RhdXJhbnRJbmZvXCIgY2xhc3M9XCJyZXN0YXVyYW50X19pbmZvXCI+XG4gICAgICAgICAgPGgzIGNsYXNzPVwicmVzdGF1cmFudF9fbmFtZSB0ZXh0LXN1YnRpdGxlXCI+JHtyZXN0YXVyYW50Lm5hbWV9PC9oMz5cbiAgICAgICAgICA8c3BhbiBjbGFzcz1cInJlc3RhdXJhbnRfX2Rpc3RhbmNlIHRleHQtYm9keVwiPuy6oO2NvOyKpOu2gO2EsCAke3Jlc3RhdXJhbnQuZGlzdGFuY2V967aEIOuCtDwvc3Bhbj5cbiAgICAgICAgICA8cCBjbGFzcz1cInJlc3RhdXJhbnRfX2Rlc2NyaXB0aW9uIHRleHQtYm9keVwiPiR7cmVzdGF1cmFudC5kZXNjcmlwdGlvbn08L3A+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8aW1nIGlkPVwiZmF2b3JpdGVcIiBzcmM9XCIke3Jlc3RhdXJhbnQuaXNGYXZvcml0ZSA/IGZhdm9yaXRlSWNvbkZpbGxlZCA6IGZhdm9yaXRlSWNvbkxpbmVkfVwiIGFsdD1cImZhdm9yaXRlXCI+XG4gICAgICA8L2xpPlxuICAgIGA7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgUmVzdGF1cmFudEl0ZW07XG4iLCJpbXBvcnQgUmVzdGF1cmFudExpc3QgZnJvbSBcIi4uL2NvbXBvbmVudHMvUmVzdGF1cmFudExpc3RcIjtcbmV4cG9ydCBjb25zdCByZXN0YXVyYW50cyA9IHtcbiAgICBzdGF0ZTogeyByZXN0YXVyYW50czogW10gfSxcbiAgICBjcmVhdGUoKSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBuZXcgUHJveHkoeyByZXN0YXVyYW50czogW10gfSwge1xuICAgICAgICAgICAgc2V0OiAob2JqLCBwcm9wLCB2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChwcm9wID09PSBcInJlc3RhdXJhbnRzXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgb2JqW3Byb3BdID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3RhdXJhbnRMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZXN0YXVyYW50TGlzdFwiKTtcbiAgICAgICAgICAgICAgICBpZiAocmVzdGF1cmFudExpc3QgaW5zdGFuY2VvZiBSZXN0YXVyYW50TGlzdCkge1xuICAgICAgICAgICAgICAgICAgICByZXN0YXVyYW50TGlzdC5yZW5kZXIoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9LFxufTtcbiIsImltcG9ydCB7IHJlc3RhdXJhbnRzIH0gZnJvbSBcIi4vcmVzdGF1cmFudHNcIjtcbmltcG9ydCB7IEFMTF9DQVRFR09SWSwgTk9UX1NFTEVDVEVEX0lOREVYLCBTT1JUX0ZBSUxFRF9OVU1CRVIsIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuY2xhc3MgQ29udHJvbGxlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRSZXN0YXVyYW50SW5kZXggPSBOT1RfU0VMRUNURURfSU5ERVg7XG4gICAgICAgIHRoaXMuc3RhdGUgPSByZXN0YXVyYW50cy5zdGF0ZTtcbiAgICAgICAgdGhpcy5sb2FkTG9jYWxTdG9yYWdlKCk7XG4gICAgfVxuICAgIHN0YXRpYyBnZXRJbnN0YW5jZSgpIHtcbiAgICAgICAgaWYgKCFDb250cm9sbGVyLmluc3RhbmNlKSB7XG4gICAgICAgICAgICBDb250cm9sbGVyLmluc3RhbmNlID0gbmV3IENvbnRyb2xsZXIoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQ29udHJvbGxlci5pbnN0YW5jZTtcbiAgICB9XG4gICAgZ2V0UmVzdGF1cmFudHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLnJlc3RhdXJhbnRzO1xuICAgIH1cbiAgICBnZXRTZWxlY3RlZFJlc3RhdXJhbnRJbmRleCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRSZXN0YXVyYW50SW5kZXg7XG4gICAgfVxuICAgIGdldFNlbGVjdGVkUmVzdGF1cmFudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUucmVzdGF1cmFudHNbdGhpcy5zZWxlY3RlZFJlc3RhdXJhbnRJbmRleF07XG4gICAgfVxuICAgIHNldFNlbGVjdGVkUmVzdGF1cmFudEluZGV4KGluZGV4KSB7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRSZXN0YXVyYW50SW5kZXggPSBpbmRleDtcbiAgICB9XG4gICAgc2V0RmF2b3JpdGVSZXN0YXVyYW50TGlzdCgpIHtcbiAgICAgICAgdGhpcy5zdGF0ZS5yZXN0YXVyYW50cyA9IHRoaXMuZ2V0TG9jYWxTdG9yYWdlKCkuZmlsdGVyKChyZXN0YXVyYW50KSA9PiB7XG4gICAgICAgICAgICBpZiAocmVzdGF1cmFudC5pc0Zhdm9yaXRlKVxuICAgICAgICAgICAgICAgIHJldHVybiByZXN0YXVyYW50O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgYWRkUmVzdGF1cmFudChuZXdSZXN0YXVyYW50KSB7XG4gICAgICAgIHRoaXMuc2V0TG9jYWxTdG9yYWdlKFsuLi50aGlzLmdldExvY2FsU3RvcmFnZSgpLCBuZXdSZXN0YXVyYW50XSk7XG4gICAgfVxuICAgIGxvYWRMb2NhbFN0b3JhZ2UoKSB7XG4gICAgICAgIHRoaXMuc3RhdGUucmVzdGF1cmFudHMgPSB0aGlzLmdldExvY2FsU3RvcmFnZSgpO1xuICAgIH1cbiAgICBnZXRMb2NhbFN0b3JhZ2UoKSB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwicmVzdGF1cmFudHNcIikpID8/IFtdO1xuICAgIH1cbiAgICBzZXRMb2NhbFN0b3JhZ2UobmV3UmVzdGF1cmFudHMpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJyZXN0YXVyYW50c1wiLCBKU09OLnN0cmluZ2lmeShuZXdSZXN0YXVyYW50cykpO1xuICAgIH1cbiAgICBzb3J0UmVzdGF1cmFudHMoc29ydGluZ0tleSkge1xuICAgICAgICB0aGlzLnN0YXRlLnJlc3RhdXJhbnRzID0gWy4uLnRoaXMuc3RhdGUucmVzdGF1cmFudHNdLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICAgIGlmIChzb3J0aW5nS2V5ID09PSBcIm5hbWVcIiB8fCBzb3J0aW5nS2V5ID09PSBcImRpc3RhbmNlXCIpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFbc29ydGluZ0tleV0gPiBiW3NvcnRpbmdLZXldID8gMSA6IC0xO1xuICAgICAgICAgICAgcmV0dXJuIFNPUlRfRkFJTEVEX05VTUJFUjtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZpbHRlclJlc3RhdXJhbnRzKGZpbHRlcmluZ0tleSkge1xuICAgICAgICBpZiAoZmlsdGVyaW5nS2V5ICE9PSBBTExfQ0FURUdPUlkpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUucmVzdGF1cmFudHMgPSB0aGlzLmdldExvY2FsU3RvcmFnZSgpLmZpbHRlcigocmVzdGF1cmFudCkgPT4gcmVzdGF1cmFudC5jYXRlZ29yeSA9PT0gZmlsdGVyaW5nS2V5KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmxvYWRMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG4gICAgdG9nZ2xlRmF2b3JpdGUoKSB7XG4gICAgICAgIGNvbnN0IHJlc3RhdXJhbnRzID0gdGhpcy5nZXRMb2NhbFN0b3JhZ2UoKTtcbiAgICAgICAgcmVzdGF1cmFudHMuZm9yRWFjaCgocmVzdGF1cmFudCwgdGFyZ2V0SW5kZXgpID0+IHtcbiAgICAgICAgICAgIGlmIChKU09OLnN0cmluZ2lmeShyZXN0YXVyYW50KSA9PVxuICAgICAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHRoaXMuZ2V0U2VsZWN0ZWRSZXN0YXVyYW50KCkpKVxuICAgICAgICAgICAgICAgIHJlc3RhdXJhbnRzW3RhcmdldEluZGV4XS5pc0Zhdm9yaXRlID1cbiAgICAgICAgICAgICAgICAgICAgIXJlc3RhdXJhbnRzW3RhcmdldEluZGV4XS5pc0Zhdm9yaXRlO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zZXRMb2NhbFN0b3JhZ2UocmVzdGF1cmFudHMpO1xuICAgICAgICB0aGlzLmdldFNlbGVjdGVkUmVzdGF1cmFudCgpLmlzRmF2b3JpdGUgPVxuICAgICAgICAgICAgIXRoaXMuZ2V0U2VsZWN0ZWRSZXN0YXVyYW50KCkuaXNGYXZvcml0ZTtcbiAgICB9XG4gICAgZGVsZXRlUmVzdGF1cmFudCgpIHtcbiAgICAgICAgY29uc3QgcmVzdGF1cmFudHMgPSB0aGlzLmdldExvY2FsU3RvcmFnZSgpO1xuICAgICAgICBjb25zdCBuZXdSZXN0YXVyYW50cyA9IHJlc3RhdXJhbnRzLmZpbHRlcigocmVzdGF1cmFudCkgPT4gSlNPTi5zdHJpbmdpZnkocmVzdGF1cmFudCkgIT1cbiAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHRoaXMuZ2V0U2VsZWN0ZWRSZXN0YXVyYW50KCkpKTtcbiAgICAgICAgdGhpcy5zZXRMb2NhbFN0b3JhZ2UobmV3UmVzdGF1cmFudHMpO1xuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IENvbnRyb2xsZXI7XG4iLCJpbXBvcnQgeyBVUkxfUkVHRVggfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5leHBvcnQgY29uc3QgaW5wdXRWYWxpZGF0b3IgPSB7XG4gICAgdmFsaWRhdGVOYW1lOiAobmFtZUlucHV0KSA9PiB7XG4gICAgICAgIGlmIChuYW1lSW5wdXQudHJpbSgpLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJbRVJST1JdIOydtOumhOydhCDsnoXroKXtlbTso7zshLjsmpQuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuYW1lSW5wdXQ7XG4gICAgfSxcbiAgICB2YWxpZGF0ZUxpbms6IChsaW5rSW5wdXQpID0+IHtcbiAgICAgICAgaWYgKGxpbmtJbnB1dC50cmltKCkubGVuZ3RoICE9IDAgJiYgIVVSTF9SRUdFWC50ZXN0KGxpbmtJbnB1dCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIltFUlJPUl0g7Jyg7Zqo7ZWcIOunge2BrOulvCDsnoXroKXtlbTso7zshLjsmpQuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsaW5rSW5wdXQ7XG4gICAgfSxcbn07XG4iLCJpbXBvcnQgeyBOT19FTEVNRU5UIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuaW1wb3J0IENvbnRyb2xsZXIgZnJvbSBcIi4uL2RvbWFpbi9Db250cm9sbGVyXCI7XG5jbGFzcyBTb3J0aW5nU2VsZWN0Qm94IGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmNvbnRyb2xsZXIgPSBDb250cm9sbGVyLmdldEluc3RhbmNlKCk7XG4gICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgICAgIHRoaXMub25TZWxlY3RPcHRpb24oKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB0aGlzLmlubmVySFRNTCA9IGBcbiAgICAgIDxzZWxlY3QgbmFtZT1cInNvcnRpbmdcIiBpZD1cInNvcnRpbmctZmlsdGVyXCIgY2xhc3M9XCJyZXN0YXVyYW50LWZpbHRlclwiPlxuICAgICAgICA8b3B0aW9uIGlkPVwic29ydGluZ09wdGlvbk5hbWVcIiB2YWx1ZT1cIm5hbWVcIj7snbTrpoTsiJw8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImRpc3RhbmNlXCI+6rGw66as7IicPC9vcHRpb24+XG4gICAgICA8L3NlbGVjdD5cbiAgICBgO1xuICAgIH1cbiAgICBvblNlbGVjdE9wdGlvbigpIHtcbiAgICAgICAgY29uc3Qgc29ydGluZ0ZpbHRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic29ydGluZy1maWx0ZXJcIik7XG4gICAgICAgIGlmIChzb3J0aW5nRmlsdGVyIGluc3RhbmNlb2YgSFRNTFNlbGVjdEVsZW1lbnQpIHtcbiAgICAgICAgICAgIHNvcnRpbmdGaWx0ZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyLnNvcnRSZXN0YXVyYW50cyhzb3J0aW5nRmlsdGVyLnZhbHVlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBnZXRPcHRpb24oKSB7XG4gICAgICAgIGNvbnN0IHNvcnRpbmdGaWx0ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNvcnRpbmctZmlsdGVyXCIpO1xuICAgICAgICBpZiAoIShzb3J0aW5nRmlsdGVyIGluc3RhbmNlb2YgSFRNTFNlbGVjdEVsZW1lbnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gTk9fRUxFTUVOVDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc29ydGluZ0ZpbHRlci52YWx1ZTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBTb3J0aW5nU2VsZWN0Qm94O1xuIiwiaW1wb3J0IHsgTk9fRUxFTUVOVCB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcbmltcG9ydCBDb250cm9sbGVyIGZyb20gXCIuLi9kb21haW4vQ29udHJvbGxlclwiO1xuaW1wb3J0IFNvcnRpbmdTZWxlY3RCb3ggZnJvbSBcIi4vU29ydGluZ1NlbGVjdEJveFwiO1xuY2xhc3MgQ2F0ZWdvcnlTZWxlY3RCb3ggZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuY29udHJvbGxlciA9IENvbnRyb2xsZXIuZ2V0SW5zdGFuY2UoKTtcbiAgICAgICAgdGhpcy5yZW5kZXIoKTtcbiAgICAgICAgdGhpcy5vblNlbGVjdE9wdGlvbigpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHRoaXMuaW5uZXJIVE1MID0gYFxuICAgICAgPHNlbGVjdCBuYW1lPVwiY2F0ZWdvcnlcIiBpZD1cImNhdGVnb3J5LWZpbHRlclwiIGNsYXNzPVwicmVzdGF1cmFudC1maWx0ZXJcIj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIuyghOyytFwiPuyghOyytDwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPVwi7ZWc7IudXCI+7ZWc7IudPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCLspJHsi51cIj7spJHsi508L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIuydvOyLnVwiPuydvOyLnTwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPVwi7JaR7IudXCI+7JaR7IudPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCLslYTsi5zslYhcIj7slYTsi5zslYg8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIuq4sO2DgFwiPuq4sO2DgDwvb3B0aW9uPlxuICAgICAgPC9zZWxlY3Q+XG4gICAgICBgO1xuICAgIH1cbiAgICBvblNlbGVjdE9wdGlvbigpIHtcbiAgICAgICAgY29uc3QgY2F0ZWdvcnlGaWx0ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhdGVnb3J5LWZpbHRlclwiKTtcbiAgICAgICAgaWYgKGNhdGVnb3J5RmlsdGVyIGluc3RhbmNlb2YgSFRNTFNlbGVjdEVsZW1lbnQpIHtcbiAgICAgICAgICAgIGNhdGVnb3J5RmlsdGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlci5maWx0ZXJSZXN0YXVyYW50cyhjYXRlZ29yeUZpbHRlci52YWx1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyLnNvcnRSZXN0YXVyYW50cyhTb3J0aW5nU2VsZWN0Qm94LmdldE9wdGlvbigpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBnZXRPcHRpb24oKSB7XG4gICAgICAgIGNvbnN0IGNhdGVnb3J5RmlsdGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYXRlZ29yeS1maWx0ZXJcIik7XG4gICAgICAgIGlmICghKGNhdGVnb3J5RmlsdGVyIGluc3RhbmNlb2YgSFRNTFNlbGVjdEVsZW1lbnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gTk9fRUxFTUVOVDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2F0ZWdvcnlGaWx0ZXIudmFsdWU7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgQ2F0ZWdvcnlTZWxlY3RCb3g7XG4iLCJpbXBvcnQgQ29udHJvbGxlciBmcm9tIFwiLi4vZG9tYWluL0NvbnRyb2xsZXJcIjtcbmltcG9ydCB7IGlucHV0VmFsaWRhdG9yIH0gZnJvbSBcIi4uL2RvbWFpbi9pbnB1dFZhbGlkYXRvclwiO1xuaW1wb3J0IHsgY2xvc2VCb3R0b21TaGVldCwgc2hvd1Jlc3RhdXJhbnRGaWx0ZXIgfSBmcm9tIFwiLi4vdXRpbHNcIjtcbmltcG9ydCBDYXRlZ29yeVNlbGVjdEJveCBmcm9tIFwiLi9DYXRlZ29yeVNlbGVjdEJveFwiO1xuaW1wb3J0IFNvcnRpbmdTZWxlY3RCb3ggZnJvbSBcIi4vU29ydGluZ1NlbGVjdEJveFwiO1xuaW1wb3J0IFRhYkJhciBmcm9tIFwiLi9UYWJCYXJcIjtcbmNsYXNzIEFkZFJlc3RhdXJhbnQgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuY29udHJvbGxlciA9IENvbnRyb2xsZXIuZ2V0SW5zdGFuY2UoKTtcbiAgICAgICAgdGhpcy5yZW5kZXIoKTtcbiAgICAgICAgdGhpcy5vbkNsaWNrQ2FuY2VsQnV0dG9uKCk7XG4gICAgICAgIHRoaXMub25TdWJtaXRSZXN0YXVyYW50Rm9ybSgpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHRoaXMuaW5uZXJIVE1MID0gYFxuICAgICAgPGgyIGNsYXNzPVwibW9kYWwtdGl0bGUgdGV4dC10aXRsZVwiPuyDiOuhnOyatCDsnYzsi53soJA8L2gyPlxuICAgICAgPGZvcm0gaWQ9XCJyZXN0YXVyYW50Rm9ybVwiPlxuXG4gICAgICAgIDwhLS0g7Lm07YWM6rOg66asIC0tPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1pdGVtIGZvcm0taXRlbS0tcmVxdWlyZWRcIj5cbiAgICAgICAgICA8bGFiZWwgZm9yPVwiY2F0ZWdvcnkgdGV4dC1jYXB0aW9uXCI+7Lm07YWM6rOg66asPC9sYWJlbD5cbiAgICAgICAgICA8c2VsZWN0IG5hbWU9XCJjYXRlZ29yeVwiIGlkPVwiY2F0ZWdvcnlcIiByZXF1aXJlZD5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJcIj7shKDtg53tlbQg7KO87IS47JqUPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwi7ZWc7IudXCI+7ZWc7IudPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwi7KSR7IudXCI+7KSR7IudPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwi7J287IudXCI+7J287IudPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwi7JaR7IudXCI+7JaR7IudPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwi7JWE7Iuc7JWIXCI+7JWE7Iuc7JWIPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwi6riw7YOAXCI+6riw7YOAPC9vcHRpb24+XG4gICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDwhLS0g7J2M7Iud7KCQIOydtOumhCAtLT5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0taXRlbSBmb3JtLWl0ZW0tLXJlcXVpcmVkXCI+XG4gICAgICAgICAgPGxhYmVsIGZvcj1cIm5hbWUgdGV4dC1jYXB0aW9uXCI+7J2066aEPC9sYWJlbD5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwibmFtZVwiIGlkPVwibmFtZVwiIHJlcXVpcmVkPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPCEtLSDqsbDrpqwgLS0+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWl0ZW0gZm9ybS1pdGVtLS1yZXF1aXJlZFwiPlxuICAgICAgICAgIDxsYWJlbCBmb3I9XCJkaXN0YW5jZSB0ZXh0LWNhcHRpb25cIj7qsbDrpqwo64+E67O0IOydtOuPmSDsi5zqsIQpIDwvbGFiZWw+XG4gICAgICAgICAgPHNlbGVjdCBuYW1lPVwiZGlzdGFuY2VcIiBpZD1cImRpc3RhbmNlXCIgcmVxdWlyZWQ+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiXCI+7ISg7YOd7ZW0IOyjvOyEuOyalDwvb3B0aW9uPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjVcIj4167aEIOuCtDwvb3B0aW9uPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjEwXCI+MTDrtoQg64K0PC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMTVcIj4xNeu2hCDrgrQ8L29wdGlvbj5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIyMFwiPjIw67aEIOuCtDwvb3B0aW9uPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjMwXCI+MzDrtoQg64K0PC9vcHRpb24+XG4gICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8IS0tIOyEpOuqhSAtLT5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0taXRlbVwiPlxuICAgICAgICAgIDxsYWJlbCBmb3I9XCJkZXNjcmlwdGlvbiB0ZXh0LWNhcHRpb25cIj7shKTrqoU8L2xhYmVsPlxuICAgICAgICAgIDx0ZXh0YXJlYSBuYW1lPVwiZGVzY3JpcHRpb25cIiBpZD1cImRlc2NyaXB0aW9uXCIgY29scz1cIjMwXCIgcm93cz1cIjVcIj48L3RleHRhcmVhPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiaGVscC10ZXh0IHRleHQtY2FwdGlvblwiPuuplOuJtCDrk7Eg7LaU6rCAIOygleuztOulvCDsnoXroKXtlbQg7KO87IS47JqULjwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDwhLS0g66eB7YGsIC0tPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1pdGVtXCI+XG4gICAgICAgICAgPGxhYmVsIGZvcj1cImxpbmsgdGV4dC1jYXB0aW9uXCI+7LC46rOgIOunge2BrDwvbGFiZWw+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cImxpbmtcIiBpZD1cImxpbmtcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImhlbHAtdGV4dCB0ZXh0LWNhcHRpb25cIj7rp6TsnqUg7KCV67O066W8IO2ZleyduO2VoCDsiJgg7J6I64qUIOunge2BrOulvCDsnoXroKXtlbQg7KO87IS47JqULjwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDwhLS0g7Leo7IaML+y2lOqwgCDrsoTtirwgLS0+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24tY29udGFpbmVyXCI+XG4gICAgICAgICAgPGJ1dHRvbiBpZD1cImNhbmNlbEJ1dHRvblwiIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImJ1dHRvbiBidXR0b24tLXNlY29uZGFyeSB0ZXh0LWNhcHRpb25cIj7st6jshoztlZjquLA8L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIGlkPVwic3VibWl0QnV0dG9uXCIgdHlwZT1cInN1Ym1pdFwiIGNsYXNzPVwiYnV0dG9uIGJ1dHRvbi0tcHJpbWFyeSB0ZXh0LWNhcHRpb25cIj7stpTqsIDtlZjquLA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Zvcm0+XG4gICAgYDtcbiAgICB9XG4gICAgb25DbGlja0NhbmNlbEJ1dHRvbigpIHtcbiAgICAgICAgY29uc3QgY2FuY2VsQnV0dG9uID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwiI2NhbmNlbEJ1dHRvblwiKTtcbiAgICAgICAgaWYgKGNhbmNlbEJ1dHRvbiBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgICAgICAgICBjYW5jZWxCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjbG9zZUJvdHRvbVNoZWV0KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBvblN1Ym1pdFJlc3RhdXJhbnRGb3JtKCkge1xuICAgICAgICBjb25zdCByZXN0YXVyYW50Rm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVzdGF1cmFudEZvcm1cIik7XG4gICAgICAgIGlmIChyZXN0YXVyYW50Rm9ybSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgICAgICAgICByZXN0YXVyYW50Rm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3UmVzdGF1cmFudCA9IHRoaXMuY3JlYXRlTmV3UmVzdGF1cmFudChldmVudCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyLmFkZFJlc3RhdXJhbnQobmV3UmVzdGF1cmFudCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyLnNvcnRSZXN0YXVyYW50cyhTb3J0aW5nU2VsZWN0Qm94LmdldE9wdGlvbigpKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRyb2xsZXIuZmlsdGVyUmVzdGF1cmFudHMoQ2F0ZWdvcnlTZWxlY3RCb3guZ2V0T3B0aW9uKCkpO1xuICAgICAgICAgICAgICAgIGlmIChUYWJCYXIuZ2V0Q3VycmVudFRhYigpID09IFwiZmF2b3JpdGVcIikge1xuICAgICAgICAgICAgICAgICAgICBUYWJCYXIuc2V0Q3VycmVudFRhYihcImFsbFwiKTtcbiAgICAgICAgICAgICAgICAgICAgc2hvd1Jlc3RhdXJhbnRGaWx0ZXIoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2xvc2VCb3R0b21TaGVldCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY3JlYXRlTmV3UmVzdGF1cmFudChldmVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoZXZlbnQudGFyZ2V0KTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1Jlc3RhdXJhbnQgPSB7XG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IGZvcm1EYXRhLmdldChcImNhdGVnb3J5XCIpLFxuICAgICAgICAgICAgICAgIG5hbWU6IGlucHV0VmFsaWRhdG9yLnZhbGlkYXRlTmFtZShmb3JtRGF0YS5nZXQoXCJuYW1lXCIpKSxcbiAgICAgICAgICAgICAgICBkaXN0YW5jZTogTnVtYmVyKGZvcm1EYXRhLmdldChcImRpc3RhbmNlXCIpKSxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZm9ybURhdGEuZ2V0KFwiZGVzY3JpcHRpb25cIiksXG4gICAgICAgICAgICAgICAgbGluazogaW5wdXRWYWxpZGF0b3IudmFsaWRhdGVMaW5rKGZvcm1EYXRhLmdldChcImxpbmtcIikpLFxuICAgICAgICAgICAgICAgIGlzRmF2b3JpdGU6IGZhbHNlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBuZXdSZXN0YXVyYW50O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgYWxlcnQoZXJyb3IubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBBZGRSZXN0YXVyYW50O1xuIiwiaW1wb3J0IHsgYWRkQnV0dG9uIH0gZnJvbSBcIi4uL2Fzc2V0c1wiO1xuaW1wb3J0IHsgb3BlbkJvdHRvbVNoZWV0IH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5jbGFzcyBOYXZCYXIgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgICAgIHRoaXMub25DbGlja0FkZEljb24oKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB0aGlzLmlubmVySFRNTCA9IGBcbiAgICAgIDxoZWFkZXIgY2xhc3M9XCJnbmJcIj5cbiAgICAgICAgPGgxIGNsYXNzPVwiZ25iX190aXRsZSB0ZXh0LXRpdGxlXCI+7KCQ7IusIOutkCDrqLnsp4A8L2gxPlxuICAgICAgICA8YnV0dG9uIGlkPVwiYWRkSWNvblwiIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImduYl9fYnV0dG9uXCIgYXJpYS1sYWJlbD1cIuydjOyLneygkCDstpTqsIBcIj5cbiAgICAgICAgICA8aW1nIGlkPVwiYWRkQnV0dG9uSW1hZ2VcIiBzcmM9JHthZGRCdXR0b259IGFsdD1cIuydjOyLneygkCDstpTqsIBcIj5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2hlYWRlcj5cbiAgICAgIGA7XG4gICAgfVxuICAgIG9uQ2xpY2tBZGRJY29uKCkge1xuICAgICAgICBjb25zdCBhZGRJY29uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGRJY29uXCIpO1xuICAgICAgICBhZGRJY29uPy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgb3BlbkJvdHRvbVNoZWV0KFwiPGFkZC1yZXN0YXVyYW50IC8+XCIpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBOYXZCYXI7XG4iLCJ2YXIgX19jbGFzc1ByaXZhdGVGaWVsZEdldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZEdldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIGdldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4ga2luZCA9PT0gXCJtXCIgPyBmIDoga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIpIDogZiA/IGYudmFsdWUgOiBzdGF0ZS5nZXQocmVjZWl2ZXIpO1xufTtcbnZhciBfUmVzdGF1cmFudERldGFpbF9pbnN0YW5jZXMsIF9SZXN0YXVyYW50RGV0YWlsX3VwZGF0ZVJlc3RhdXJhbnRzU3RhdGU7XG5pbXBvcnQgeyBmYXZvcml0ZUljb25GaWxsZWQsIGZhdm9yaXRlSWNvbkxpbmVkIH0gZnJvbSBcIi4uL2Fzc2V0c1wiO1xuaW1wb3J0IENvbnRyb2xsZXIgZnJvbSBcIi4uL2RvbWFpbi9Db250cm9sbGVyXCI7XG5pbXBvcnQgeyBjbG9zZUJvdHRvbVNoZWV0LCBmaW5kSW1hZ2UgfSBmcm9tIFwiLi4vdXRpbHNcIjtcbmltcG9ydCBDYXRlZ29yeVNlbGVjdEJveCBmcm9tIFwiLi9DYXRlZ29yeVNlbGVjdEJveFwiO1xuaW1wb3J0IFNvcnRpbmdTZWxlY3RCb3ggZnJvbSBcIi4vU29ydGluZ1NlbGVjdEJveFwiO1xuaW1wb3J0IFRhYkJhciBmcm9tIFwiLi9UYWJCYXJcIjtcbmNsYXNzIFJlc3RhdXJhbnREZXRhaWwgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIF9SZXN0YXVyYW50RGV0YWlsX2luc3RhbmNlcy5hZGQodGhpcyk7XG4gICAgICAgIHRoaXMuY29udHJvbGxlciA9IENvbnRyb2xsZXIuZ2V0SW5zdGFuY2UoKTtcbiAgICAgICAgdGhpcy5yZW5kZXIodGhpcy5jb250cm9sbGVyLmdldFNlbGVjdGVkUmVzdGF1cmFudCgpKTtcbiAgICB9XG4gICAgcmVuZGVyKHJlc3RhdXJhbnQpIHtcbiAgICAgICAgdGhpcy5pbm5lckhUTUwgPSBgXG4gICAgICA8ZGl2IGlkPVwicmVzdGF1cmFudERldGFpbFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiaWNvbi1jb250YWluZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVzdGF1cmFudF9fY2F0ZWdvcnlcIj5cbiAgICAgICAgICAgIDxpbWcgc3JjPVwiJHtmaW5kSW1hZ2UocmVzdGF1cmFudC5jYXRlZ29yeSl9XCIgYWx0PVwiJHtyZXN0YXVyYW50LmNhdGVnb3J5fVwiIGNsYXNzPVwiY2F0ZWdvcnktaWNvblwiPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxpbWcgaWQ9XCJmYXZvcml0ZVwiIHNyYz1cIiR7cmVzdGF1cmFudC5pc0Zhdm9yaXRlID8gZmF2b3JpdGVJY29uRmlsbGVkIDogZmF2b3JpdGVJY29uTGluZWR9XCIgYWx0PVwiZmF2b3JpdGVcIj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9XCJyZXN0YXVyYW50SW5mb1wiIGNsYXNzPVwiaW5mby1jb250YWluZXJcIj5cbiAgICAgICAgICA8aDMgY2xhc3M9XCJyZXN0YXVyYW50X19kZXRhaWxfX25hbWUgdGV4dC1zdWJ0aXRsZVwiPiR7cmVzdGF1cmFudC5uYW1lfTwvaDM+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJyZXN0YXVyYW50X19kZXRhaWxfX2Rpc3RhbmNlIHRleHQtYm9keVwiPuy6oO2NvOyKpOu2gO2EsCAke3Jlc3RhdXJhbnQuZGlzdGFuY2V967aEIOuCtDwvc3Bhbj5cbiAgICAgICAgICA8cCBjbGFzcz1cInJlc3RhdXJhbnRfX2RldGFpbF9fZGVzY3JpcHRpb24gdGV4dC1ib2R5XCI+JHtyZXN0YXVyYW50LmRlc2NyaXB0aW9ufTwvcD5cbiAgICAgICAgICA8YSBocmVmPVwiJHtyZXN0YXVyYW50Lmxpbmt9XCIgY2xhc3M9XCJyZXN0YXVyYW50X19saW5rIHRleHQtYm9keVwiPiR7cmVzdGF1cmFudC5saW5rfTwvYT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24tY29udGFpbmVyXCI+XG4gICAgICAgICAgPGJ1dHRvbiBpZD1cImRlbGV0ZUJ1dHRvblwiIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImJ1dHRvbiBidXR0b24tLXNlY29uZGFyeSB0ZXh0LWNhcHRpb25cIj7sgq3soJztlZjquLA8L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uIGlkPVwiY2xvc2VCdXR0b25cIiB0eXBlPVwic3VibWl0XCIgY2xhc3M9XCJidXR0b24gYnV0dG9uLS1wcmltYXJ5IHRleHQtY2FwdGlvblwiPuuLq+q4sDwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIGA7XG4gICAgICAgIHRoaXMub25DbGlja0Nsb3NlQnV0dG9uKCk7XG4gICAgICAgIHRoaXMub25DbGlja0RlbGV0ZUJ1dHRvbigpO1xuICAgICAgICB0aGlzLm9uVG9nZ2xlRmF2b3JpdGUoKTtcbiAgICB9XG4gICAgb25DbGlja0Nsb3NlQnV0dG9uKCkge1xuICAgICAgICBjb25zdCBjbG9zZUJ1dHRvbiA9IHRoaXMucXVlcnlTZWxlY3RvcihcIiNjbG9zZUJ1dHRvblwiKTtcbiAgICAgICAgaWYgKGNsb3NlQnV0dG9uIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHtcbiAgICAgICAgICAgIGNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfUmVzdGF1cmFudERldGFpbF9pbnN0YW5jZXMsIFwibVwiLCBfUmVzdGF1cmFudERldGFpbF91cGRhdGVSZXN0YXVyYW50c1N0YXRlKS5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlci5sb2FkTG9jYWxTdG9yYWdlKCk7XG4gICAgICAgICAgICAgICAgY2xvc2VCb3R0b21TaGVldCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25DbGlja0RlbGV0ZUJ1dHRvbigpIHtcbiAgICAgICAgY29uc3QgZGVsZXRlQnV0dG9uID0gdGhpcy5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZUJ1dHRvblwiKTtcbiAgICAgICAgaWYgKGRlbGV0ZUJ1dHRvbiBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgICAgICAgICBkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRyb2xsZXIuZGVsZXRlUmVzdGF1cmFudCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlci5zb3J0UmVzdGF1cmFudHMoU29ydGluZ1NlbGVjdEJveC5nZXRPcHRpb24oKSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyLmZpbHRlclJlc3RhdXJhbnRzKENhdGVnb3J5U2VsZWN0Qm94LmdldE9wdGlvbigpKTtcbiAgICAgICAgICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9SZXN0YXVyYW50RGV0YWlsX2luc3RhbmNlcywgXCJtXCIsIF9SZXN0YXVyYW50RGV0YWlsX3VwZGF0ZVJlc3RhdXJhbnRzU3RhdGUpLmNhbGwodGhpcyk7XG4gICAgICAgICAgICAgICAgY2xvc2VCb3R0b21TaGVldCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25Ub2dnbGVGYXZvcml0ZSgpIHtcbiAgICAgICAgY29uc3QgZmF2b3JpdGUgPSB0aGlzLnF1ZXJ5U2VsZWN0b3IoXCIjZmF2b3JpdGVcIik7XG4gICAgICAgIGlmIChmYXZvcml0ZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgICAgICAgICBmYXZvcml0ZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlci50b2dnbGVGYXZvcml0ZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyKHRoaXMuY29udHJvbGxlci5nZXRTZWxlY3RlZFJlc3RhdXJhbnQoKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbl9SZXN0YXVyYW50RGV0YWlsX2luc3RhbmNlcyA9IG5ldyBXZWFrU2V0KCksIF9SZXN0YXVyYW50RGV0YWlsX3VwZGF0ZVJlc3RhdXJhbnRzU3RhdGUgPSBmdW5jdGlvbiBfUmVzdGF1cmFudERldGFpbF91cGRhdGVSZXN0YXVyYW50c1N0YXRlKCkge1xuICAgIGlmIChUYWJCYXIuZ2V0Q3VycmVudFRhYigpID09PSBcImZhdm9yaXRlXCIpIHtcbiAgICAgICAgdGhpcy5jb250cm9sbGVyLnNldEZhdm9yaXRlUmVzdGF1cmFudExpc3QoKTtcbiAgICB9XG59O1xuZXhwb3J0IGRlZmF1bHQgUmVzdGF1cmFudERldGFpbDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBBZGRSZXN0YXVyYW50IGZyb20gXCIuL2NvbXBvbmVudHMvQWRkUmVzdGF1cmFudFwiO1xuaW1wb3J0IEJvdHRvbVNoZWV0IGZyb20gXCIuL2NvbXBvbmVudHMvQm90dG9tU2hlZXRcIjtcbmltcG9ydCBDYXRlZ29yeVNlbGVjdEJveCBmcm9tIFwiLi9jb21wb25lbnRzL0NhdGVnb3J5U2VsZWN0Qm94XCI7XG5pbXBvcnQgTmF2QmFyIGZyb20gXCIuL2NvbXBvbmVudHMvTmF2QmFyXCI7XG5pbXBvcnQgUmVzdGF1cmFudERldGFpbCBmcm9tIFwiLi9jb21wb25lbnRzL1Jlc3RhdXJhbnREZXRhaWxcIjtcbmltcG9ydCBSZXN0YXVyYW50TGlzdCBmcm9tIFwiLi9jb21wb25lbnRzL1Jlc3RhdXJhbnRMaXN0XCI7XG5pbXBvcnQgU29ydGluZ1NlbGVjdEJveCBmcm9tIFwiLi9jb21wb25lbnRzL1NvcnRpbmdTZWxlY3RCb3hcIjtcbmltcG9ydCBUYWJCYXIgZnJvbSBcIi4vY29tcG9uZW50cy9UYWJCYXJcIjtcbmltcG9ydCBcIi4vY3NzL3N0eWxlLmNzc1wiO1xuaW1wb3J0IHsgcmVzdGF1cmFudHMgfSBmcm9tIFwiLi9kb21haW4vcmVzdGF1cmFudHNcIjtcbnJlc3RhdXJhbnRzLmNyZWF0ZSgpO1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwibmF2LWJhclwiLCBOYXZCYXIpO1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwiYm90dG9tLXNoZWV0XCIsIEJvdHRvbVNoZWV0KTtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZShcImNhdGVnb3J5LXNlbGVjdC1ib3hcIiwgQ2F0ZWdvcnlTZWxlY3RCb3gpO1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwic29ydGluZy1zZWxlY3QtYm94XCIsIFNvcnRpbmdTZWxlY3RCb3gpO1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwiYWRkLXJlc3RhdXJhbnRcIiwgQWRkUmVzdGF1cmFudCk7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoXCJyZXN0YXVyYW50LWxpc3RcIiwgUmVzdGF1cmFudExpc3QpO1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwidGFiLWJhclwiLCBUYWJCYXIpO1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwicmVzdGF1cmFudC1kZXRhaWxcIiwgUmVzdGF1cmFudERldGFpbCk7XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicmVwbGFjZSIsInAiLCJuYyIsIkJvdHRvbVNoZWV0IiwiSFRNTEVsZW1lbnQiLCJjb25zdHJ1Y3RvciIsInN1cGVyIiwicmVuZGVyIiwiY2hpbGRyZW4iLCJpbm5lckhUTUwiLCJvbkNsaWNrQmFja2Ryb3AiLCJtb2RhbEJhY2tkcm9wIiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xvc2UiLCJvcGVuIiwiYm90dG9tU2hlZXQiLCJjbGFzc0xpc3QiLCJhZGQiLCJjbG9zZUJvdHRvbVNoZWV0Iiwib3BlbkJvdHRvbVNoZWV0Iiwic2hvd1Jlc3RhdXJhbnRGaWx0ZXIiLCJyZXN0YXVyYW50RmlsdGVyIiwiZGlzcGxheSIsImZpbmRJbWFnZSIsImNhdGVnb3J5IiwiTk9fRUxFTUVOVCIsIlVSTF9SRUdFWCIsIlRhYkJhciIsImNvbnRyb2xsZXIiLCJvbkNsaWNrVGFiIiwidGFiQ29udGFpbmVyIiwiSFRNTEZvcm1FbGVtZW50IiwiZ2V0Q3VycmVudFRhYiIsImhpZGVSZXN0YXVyYW50RmlsdGVyIiwic2V0RmF2b3JpdGVSZXN0YXVyYW50TGlzdCIsImxvYWRMb2NhbFN0b3JhZ2UiLCJzdGF0aWMiLCJjdXJyZW50VGFiIiwiSFRNTElucHV0RWxlbWVudCIsInZhbHVlIiwidGFiIiwiY2hlY2tlZCIsIlJlc3RhdXJhbnRMaXN0IiwiZ2V0UmVzdGF1cmFudHMiLCJyZXN0YXVyYW50IiwibmFtZSIsImRpc3RhbmNlIiwiZGVzY3JpcHRpb24iLCJpc0Zhdm9yaXRlIiwib25DbGlja1Jlc3RhdXJhbnRJdGVtIiwib25Ub2dnbGVGYXZvcml0ZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwicmVzdGF1cmFudEl0ZW0iLCJzZXRTZWxlY3RlZFJlc3RhdXJhbnRJbmRleCIsImZhdm9yaXRlIiwidG9nZ2xlRmF2b3JpdGUiLCJyZXN0YXVyYW50cyIsInN0YXRlIiwiY3JlYXRlIiwiUHJveHkiLCJzZXQiLCJyZXN0YXVyYW50TGlzdCIsIkNvbnRyb2xsZXIiLCJzZWxlY3RlZFJlc3RhdXJhbnRJbmRleCIsImluc3RhbmNlIiwiZ2V0U2VsZWN0ZWRSZXN0YXVyYW50SW5kZXgiLCJnZXRTZWxlY3RlZFJlc3RhdXJhbnQiLCJnZXRMb2NhbFN0b3JhZ2UiLCJmaWx0ZXIiLCJhZGRSZXN0YXVyYW50IiwibmV3UmVzdGF1cmFudCIsInNldExvY2FsU3RvcmFnZSIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIm5ld1Jlc3RhdXJhbnRzIiwic2V0SXRlbSIsInNvcnRSZXN0YXVyYW50cyIsInNvcnRpbmdLZXkiLCJzb3J0IiwiYiIsImZpbHRlclJlc3RhdXJhbnRzIiwiZmlsdGVyaW5nS2V5IiwidGFyZ2V0SW5kZXgiLCJkZWxldGVSZXN0YXVyYW50IiwiaW5wdXRWYWxpZGF0b3IiLCJuYW1lSW5wdXQiLCJ0cmltIiwibGlua0lucHV0IiwidGVzdCIsIlNvcnRpbmdTZWxlY3RCb3giLCJvblNlbGVjdE9wdGlvbiIsInNvcnRpbmdGaWx0ZXIiLCJIVE1MU2VsZWN0RWxlbWVudCIsIkNhdGVnb3J5U2VsZWN0Qm94IiwiY2F0ZWdvcnlGaWx0ZXIiLCJBZGRSZXN0YXVyYW50Iiwib25DbGlja0NhbmNlbEJ1dHRvbiIsIm9uU3VibWl0UmVzdGF1cmFudEZvcm0iLCJjYW5jZWxCdXR0b24iLCJyZXN0YXVyYW50Rm9ybSIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJjcmVhdGVOZXdSZXN0YXVyYW50IiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsIk51bWJlciIsImxpbmsiLCJlcnJvciIsImFsZXJ0IiwibWVzc2FnZSIsIk5hdkJhciIsIm9uQ2xpY2tBZGRJY29uIiwiYWRkSWNvbiIsIl9SZXN0YXVyYW50RGV0YWlsX2luc3RhbmNlcyIsIl9SZXN0YXVyYW50RGV0YWlsX3VwZGF0ZVJlc3RhdXJhbnRzU3RhdGUiLCJfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0IiwicmVjZWl2ZXIiLCJraW5kIiwiZiIsIlR5cGVFcnJvciIsImhhcyIsIlJlc3RhdXJhbnREZXRhaWwiLCJvbkNsaWNrQ2xvc2VCdXR0b24iLCJvbkNsaWNrRGVsZXRlQnV0dG9uIiwiY2xvc2VCdXR0b24iLCJkZWxldGVCdXR0b24iLCJXZWFrU2V0IiwiY3VzdG9tRWxlbWVudHMiLCJkZWZpbmUiXSwic291cmNlUm9vdCI6IiJ9